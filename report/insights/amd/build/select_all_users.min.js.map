{"version":3,"sources":["../src/select_all_users.js"],"names":["SELECTORS","CONTAINERS","SELECTED_USERS_INFO","ACTIONS","SELECT_ALL_EXISTING","CLEAR_ALL","STATUSES","NONE_SELECTED","PARTIALY_SELECTED","ALL_ON_PAGE_SELECTED","ALL_EXISTING_SELECTED","allUserIds","selectedStatus","registerListenerEvents","PubSub","subscribe","CheckboxToggleAll","events","checkboxToggled","data","handleCheckboxToggle","document","addEventListener","e","templateData","target","matches","total","renderNotification","checkedSlaves","length","slaves","selectednumber","templateName","selectedInsightsContainer","querySelector","Templates","renderForPromise","html","js","replaceNodeContents","innerHTML","init","selectedUsersInfoContainer","dataset","alluserids"],"mappings":"0hBAuBA,OACA,OACA,O,25BAEMA,CAAAA,CAAS,CAAG,CACdC,UAAU,CAAE,CACRC,mBAAmB,CAAE,uCADb,CADE,CAIdC,OAAO,CAAE,CACLC,mBAAmB,CAAE,uCADhB,CAELC,SAAS,CAAE,sCAFN,CAJK,C,CAULC,CAAQ,CAAG,CACpBC,aAAa,CAAE,CADK,CAEpBC,iBAAiB,CAAE,CAFC,CAGpBC,oBAAoB,CAAE,CAHF,CAIpBC,qBAAqB,CAAE,CAJH,C,cAOjB,GAAIC,CAAAA,CAAJ,C,eAEA,GAAIC,CAAAA,CAAc,CAAGN,CAAQ,CAACC,aAA9B,C,sBAEDM,CAAAA,CAAsB,CAAG,UAAM,CACjCC,CAAM,CAACC,SAAP,CAAiBC,UAAkBC,MAAlB,CAAyBC,eAA1C,CAA2D,SAACC,CAAD,CAAU,CACjEC,CAAoB,CAACD,CAAD,CACvB,CAFD,EAIAE,QAAQ,CAACC,gBAAT,CAA0B,OAA1B,CAAkC,SAACC,CAAD,CAAO,CACrC,GAAIC,CAAAA,CAAY,CAAG,EAAnB,CAEA,GAAID,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiB1B,CAAS,CAACG,OAAV,CAAkBC,mBAAnC,CAAJ,CAA6D,CACzD,iBAAAQ,CAAc,CAAGN,CAAQ,CAACI,qBAA1B,CACAc,CAAY,CAAG,CACXG,KAAK,CAAE,GADI,CAAf,CAGAC,CAAkB,CAACJ,CAAD,CACrB,CAED,GAAID,CAAC,CAACE,MAAF,CAASC,OAAT,CAAiB1B,CAAS,CAACG,OAAV,CAAkBE,SAAnC,CAAJ,CAAmD,CAC/C,iBAAAO,CAAc,CAAGN,CAAQ,CAACC,aAA1B,CACAqB,CAAkB,CAACJ,CAAD,CACrB,CACJ,CAfD,CAgBH,C,CAEKJ,CAAoB,CAAG,SAACD,CAAD,CAAU,CACnC,GAAIK,CAAAA,CAAY,CAAG,EAAnB,CAEA,GAAiC,CAA7B,EAAAL,CAAI,CAACU,aAAL,CAAmBC,MAAvB,CAAoC,CAChC,iBAAAlB,CAAc,CAAGN,CAAQ,CAACC,aAC7B,CAFD,IAEO,IAAIY,CAAI,CAACY,MAAL,CAAYD,MAAZ,EAAsBX,CAAI,CAACU,aAAL,CAAmBC,MAA7C,CAAqD,CACxD,iBAAAlB,CAAc,CAAGN,CAAQ,CAACE,iBAA1B,CACAgB,CAAY,CAAG,CACXQ,cAAc,CAAEb,CAAI,CAACU,aAAL,CAAmBC,MADxB,CAGlB,CALM,IAKA,IAAIX,CAAI,CAACY,MAAL,CAAYD,MAAZ,EAAsBX,CAAI,CAACU,aAAL,CAAmBC,MAA7C,CAAqD,CACxD,iBAAAlB,CAAc,CAAGN,CAAQ,CAACG,oBAA1B,CACAe,CAAY,CAAG,CACXQ,cAAc,CAAEb,CAAI,CAACU,aAAL,CAAmBC,MADxB,CAEXH,KAAK,CAAE,GAFI,CAIlB,CAEDC,CAAkB,CAACJ,CAAD,CACrB,C,CAGKI,CAAkB,4CAAG,WAAOJ,CAAP,sGAGfZ,CAHe,eAIdN,CAAQ,CAACE,iBAJK,UAOdF,CAAQ,CAACG,oBAPK,UAUdH,CAAQ,CAACI,qBAVK,kBAKfuB,CAAY,CAAG,6CAAf,CALe,mCAQfA,CAAY,CAAG,+CAAf,CARe,mCAWfA,CAAY,CAAG,gDAAf,CAXe,mCAcfA,CAAY,CAAG,EAAf,CAde,QAiBjBC,CAjBiB,CAiBWb,QAAQ,CAACc,aAAT,CAAuBnC,CAAS,CAACC,UAAV,CAAqBC,mBAA5C,CAjBX,MAmBG,CAAtB,CAAA+B,CAAY,CAACH,MAnBM,mCAoBMM,WAAUC,gBAAV,CAA2BJ,CAA3B,CAAyCT,CAAzC,CApBN,kBAoBZc,CApBY,GAoBZA,IApBY,CAoBNC,CApBM,GAoBNA,EApBM,iBAqBbH,WAAUI,mBAAV,CAA8BN,CAA9B,CAAyDI,CAAzD,CAA+DC,CAA/D,CArBa,iCAuBnBL,CAAyB,CAACO,SAA1B,CAAsC,EAAtC,CAvBmB,yCAAH,uD,QAmCJ,QAAPC,CAAAA,IAAO,EAAM,CACtB,GAAMC,CAAAA,CAA0B,CAAGtB,QAAQ,CAACc,aAAT,CAAuBnC,CAAS,CAACC,UAAV,CAAqBC,mBAA5C,CAAnC,CACA,aAAAS,CAAU,CAAGgC,CAA0B,CAACC,OAA3B,CAAmCC,UAAhD,CAEAhC,CAAsB,EACzB,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n *\n * @module     report_insights/select_all_users\n * @package    report_insights\n * @copyright  2020 Mihail Geshoski <mihail@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport * as PubSub from 'core/pubsub';\nimport CheckboxToggleAll from 'core/checkbox-toggleall';\nimport Templates from 'core/templates';\n\nconst SELECTORS = {\n    CONTAINERS: {\n        SELECTED_USERS_INFO: '[data-region=\"selected-users-info\"]'\n    },\n    ACTIONS: {\n        SELECT_ALL_EXISTING: '[data-action=\"select-all-existing\"]',\n        CLEAR_ALL: '[data-action=\"clear-all-selected\"]',\n    }\n};\n\nexport const STATUSES = {\n    NONE_SELECTED: 0,\n    PARTIALY_SELECTED: 1,\n    ALL_ON_PAGE_SELECTED: 2,\n    ALL_EXISTING_SELECTED: 3\n};\n\nexport let allUserIds;\n\nexport let selectedStatus = STATUSES.NONE_SELECTED;\n\nconst registerListenerEvents = () => {\n    PubSub.subscribe(CheckboxToggleAll.events.checkboxToggled, (data) => {\n        handleCheckboxToggle(data);\n    });\n\n    document.addEventListener('click',(e) => {\n        let templateData = {};\n\n        if (e.target.matches(SELECTORS.ACTIONS.SELECT_ALL_EXISTING)) {\n            selectedStatus = STATUSES.ALL_EXISTING_SELECTED;\n            templateData = {\n                total: 1000\n            };\n            renderNotification(templateData);\n        }\n\n        if (e.target.matches(SELECTORS.ACTIONS.CLEAR_ALL)) {\n            selectedStatus = STATUSES.NONE_SELECTED;\n            renderNotification(templateData);\n        }\n    });\n};\n\nconst handleCheckboxToggle = (data) => {\n    let templateData = {};\n\n    if (data.checkedSlaves.length == 0) {\n        selectedStatus = STATUSES.NONE_SELECTED;\n    } else if (data.slaves.length != data.checkedSlaves.length) {\n        selectedStatus = STATUSES.PARTIALY_SELECTED;\n        templateData = {\n            selectednumber: data.checkedSlaves.length,\n        };\n    } else if (data.slaves.length == data.checkedSlaves.length) {\n        selectedStatus = STATUSES.ALL_ON_PAGE_SELECTED;\n        templateData = {\n            selectednumber: data.checkedSlaves.length,\n            total: 1000\n        };\n    }\n\n    renderNotification(templateData);\n};\n\n\nconst renderNotification = async (templateData) => {\n    let templateName;\n\n    switch (selectedStatus) {\n        case STATUSES.PARTIALY_SELECTED:\n            templateName = 'report_insights/insights_partially_selected';\n            break;\n        case STATUSES.ALL_ON_PAGE_SELECTED:\n            templateName = 'report_insights/all_insights_on_page_selected';\n            break;\n        case STATUSES.ALL_EXISTING_SELECTED:\n            templateName = 'report_insights/all_existing_insights_selected';\n            break;\n        default:\n            templateName = '';\n    }\n\n    const selectedInsightsContainer = document.querySelector(SELECTORS.CONTAINERS.SELECTED_USERS_INFO);\n\n    if (templateName.length > 0) {\n        const {html, js} = await Templates.renderForPromise(templateName, templateData);\n        await Templates.replaceNodeContents(selectedInsightsContainer, html, js);\n    } else {\n        selectedInsightsContainer.innerHTML = '';\n    }\n};\n\n/**\n * Fetch all the information on modules we'll need in the activity chooser.\n *\n * @method init\n * @param {Number} courseid What course to fetch the data for\n * @param {Number} sectionid What section to fetch the data for\n * @return {object} jQuery promise\n */\nexport const init = () => {\n    const selectedUsersInfoContainer = document.querySelector(SELECTORS.CONTAINERS.SELECTED_USERS_INFO);\n    allUserIds = selectedUsersInfoContainer.dataset.alluserids;\n\n    registerListenerEvents();\n};\n"],"file":"select_all_users.min.js"}