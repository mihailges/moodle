{"version":3,"sources":["../src/chooser_dialogue.js"],"names":["carouselPageTo","e","mappedModules","modal","carousel","module","target","closest","selectors","regions","chooserOption","container","moduleName","dataset","modname","Templates","renderForPromise","get","html","js","help","getBody","querySelector","replaceNodeContents","on","helpContent","chooserSummary","description","focus","registerListenerEvents","addEventListener","interval","off","actions","optionActions","showSummary","matches","closeOption","allModules","document","modules","caller","initKeyboardNavigation","chooserOptions","querySelectorAll","Array","from","forEach","element","keyCode","enter","space","arrowRight","currentOption","nextOption","nextElementSibling","firstOption","firstElementChild","toFocusOption","clickErrorHandler","focusChooserOption","arrowLeft","previousOption","previousElementSibling","lastOption","lastElementChild","home","end","currentChooserOption","previousChooserOption","previousChooserOptionLink","addChooser","previousChooserOptionHelp","tabIndex","currentChooserOptionLink","currentChooserOptionHelp","item","fallback","displayChooser","origin","sectionModules","Map","set","modulename","getRoot","ModalEvents","hidden","shown","getModal","firstChooserOption","show"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A type of dialogue used as for choosing options.\n *\n * @module     core_course/chooser_dialogue\n * @package    core\n * @copyright  2019 Mihail Geshoski <mihail@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as ModalEvents from 'core/modal_events';\nimport selectors from 'core_course/local/chooser/selectors';\nimport * as Templates from 'core/templates';\nimport {end, arrowLeft, arrowRight, home, enter, space} from 'core/key_codes';\n\n/**\n * Given an event from the main module 'page' navigate to it's help section via a carousel.\n *\n * @method carouselPageTo\n * @param {Event} e Triggering Event\n * @param {Map} mappedModules A map of all of the modules we are working with with K: mod_name V: {Object}\n * @param {Promise} modal Our modal that we are working with\n * @param {jQuery} carousel Our initialized carousel to manipulate\n */\nconst carouselPageTo = async(e, mappedModules, modal, carousel) => {\n    // Get the systems name for the module just clicked.\n    const module = e.target.closest(selectors.regions.chooserOption.container);\n    const moduleName = module.dataset.modname;\n    // Build up the html & js ready to place into the help section.\n    const {html, js} = await Templates.renderForPromise('core_course/chooser_help', mappedModules.get(moduleName));\n    const help = modal.getBody()[0].querySelector(selectors.regions.help);\n    await Templates.replaceNodeContents(help, html, js);\n    // Trigger the transition between 'pages'.\n    carousel.carousel('next');\n    carousel.carousel('pause');\n\n    carousel.on('slid.bs.carousel', () => {\n        const helpContent = help.querySelector(selectors.regions.chooserSummary.description);\n        helpContent.focus();\n    });\n};\n\n/**\n * Register chooser related event listeners.\n *\n * @method registerListenerEvents\n * @param {Promise} modal Our modal that we are working with\n * @param {Map} mappedModules A map of all of the modules we are working with with K: mod_name V: {Object}\n */\nconst registerListenerEvents = (modal, mappedModules) => {\n\n    modal.getBody()[0].addEventListener('click', async(e) => {\n        const carousel = $(selectors.regions.carousel);\n        carousel.carousel({interval: false});\n        carousel.off('keydown.bs.carousel');\n        carousel.carousel('pause');\n        if (e.target.closest(selectors.actions.optionActions.showSummary)) {\n            await carouselPageTo(e, mappedModules, modal, carousel);\n        }\n\n        // From the help screen go back to the module overview.\n        if (e.target.matches(selectors.actions.closeOption)) {\n            // Trigger the transition between 'pages'.\n            carousel.carousel('prev');\n            carousel.on('slid.bs.carousel', async() => {\n                const module = e.target.dataset.modname;\n                const allModules = document.querySelector(selectors.regions.modules);\n                const caller = allModules.querySelector(`[role=\"menuitem\"][data-modname=${module}]`);\n                await caller.focus();\n            });\n        }\n    });\n\n    // Register event listeners related to the keyboard navigation controls.\n    initKeyboardNavigation(modal, mappedModules);\n};\n\n/**\n * Initialise the keyboard navigation controls for the chooser.\n *\n * @method initKeyboardNavigation\n * @param {Promise} modal Our modal that we are working with\n * @param {Map} mappedModules A map of all of the modules we are working with with K: mod_name V: {Object}\n */\nconst initKeyboardNavigation = (modal, mappedModules) => {\n\n    const chooserOptions = modal.getBody()[0].querySelectorAll(selectors.regions.chooserOption.container);\n\n    Array.from(chooserOptions).forEach((element) => {\n        return element.addEventListener('keyup', async(e) => {\n\n            const chooserOptions = document.querySelector(selectors.regions.chooserOptions);\n            // Check for enter/ space triggers for showing the help.\n            if (e.keyCode === enter || e.keyCode === space) {\n                if (e.target.matches(selectors.actions.optionActions.showSummary)) {\n                    const carousel = $(selectors.regions.carousel);\n                    carousel.carousel({interval: false});\n                    carousel.off('keydown.bs.carousel');\n                    carousel.carousel('pause');\n                    await carouselPageTo(e, mappedModules, modal, carousel);\n                }\n            }\n\n            // Next.\n            if (e.keyCode === arrowRight) {\n                const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                const nextOption = currentOption.nextElementSibling;\n                const firstOption = chooserOptions.firstElementChild;\n                const toFocusOption = clickErrorHandler(nextOption, firstOption);\n                focusChooserOption(toFocusOption, currentOption);\n            }\n\n            // Previous.\n            if (e.keyCode === arrowLeft) {\n                const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                const previousOption = currentOption.previousElementSibling;\n                const lastOption = chooserOptions.lastElementChild;\n                const toFocusOption = clickErrorHandler(previousOption, lastOption);\n                focusChooserOption(toFocusOption, currentOption);\n            }\n\n            if (e.keyCode === home) {\n                const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                const firstOption = chooserOptions.firstElementChild;\n                focusChooserOption(firstOption, currentOption);\n            }\n\n            if (e.keyCode === end) {\n                const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                const lastOption = chooserOptions.lastElementChild;\n                focusChooserOption(lastOption, currentOption);\n            }\n        });\n    });\n};\n\n/**\n * Focus on a chooser option element and remove the previous chooser element from the focus order\n *\n * @method focusChooserOption\n * @param {HTMLElement} currentChooserOption The current chooser option element that we want to focus\n * @param {HTMLElement} previousChooserOption The previous focused option element\n */\nconst focusChooserOption = (currentChooserOption, previousChooserOption = false) => {\n    if (previousChooserOption !== false) {\n        const previousChooserOptionLink = previousChooserOption.querySelector(selectors.actions.addChooser);\n        const previousChooserOptionHelp = previousChooserOption.querySelector(selectors.actions.optionActions.showSummary);\n        // Set tabindex to -1 to remove the previous chooser option element from the focus order.\n        previousChooserOption.tabIndex = -1;\n        previousChooserOptionLink.tabIndex = -1;\n        previousChooserOptionHelp.tabIndex = -1;\n    }\n\n    const currentChooserOptionLink = currentChooserOption.querySelector(selectors.actions.addChooser);\n    const currentChooserOptionHelp = currentChooserOption.querySelector(selectors.actions.optionActions.showSummary);\n    // Set tabindex to 0 to add current chooser option element to the focus order.\n    currentChooserOption.tabIndex = 0;\n    currentChooserOptionLink.tabIndex = 0;\n    currentChooserOptionHelp.tabIndex = 0;\n    // Focus the current chooser option element.\n    currentChooserOption.focus();\n};\n\n/**\n * Small error handling function to make sure the navigated to object exists\n *\n * @method clickErrorHandler\n * @param {HTMLElement} item What we want to check exists\n * @param {HTMLElement} fallback If we dont match anything fallback the focus\n */\nconst clickErrorHandler = (item, fallback) => {\n    if (item !== null) {\n        return item;\n    } else {\n        return fallback;\n    }\n};\n\n/**\n * Display the module chooser.\n *\n * @method displayChooser\n * @param {HTMLElement} origin The calling button\n * @param {Object} modal Our created modal for the section\n * @param {Array} sectionModules An array of all of the built module information\n */\nexport const displayChooser = async(origin, modal, sectionModules) => {\n\n    // Make a map so we can quickly fetch a specific module's object for either rendering or searching.\n    const mappedModules = new Map();\n    sectionModules.forEach((module) => {\n        mappedModules.set(module.modulename, module);\n    });\n\n    // Register event listeners.\n    await registerListenerEvents(modal, mappedModules);\n\n    // We want to focus on the action select when the dialog is closed.\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        try {\n            // Just in case a user shuts the chooser on the help screen set it back to default.\n            const carousel = $(selectors.regions.carousel);\n            carousel.carousel({interval: false});\n            carousel.carousel(0);\n\n            origin.focus();\n        } catch (e) {\n            // eslint-disable-line\n        }\n    });\n\n    // We want to focus on the first chooser option element as soon as the modal is opened.\n    modal.getRoot().on(ModalEvents.shown, () => {\n        modal.getModal()[0].tabIndex = -1;\n        const firstChooserOption = modal.getBody()[0].querySelector(selectors.regions.chooserOption.container);\n        focusChooserOption(firstChooserOption);\n    });\n\n    modal.show();\n};\n"],"file":"chooser_dialogue.min.js"}