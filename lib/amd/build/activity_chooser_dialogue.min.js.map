{"version":3,"sources":["../src/activity_chooser_dialogue.js"],"names":["define","Y","$","PubSub","ActivityChooserEvents","panel","submitbutton","container","options","listenevents","bodycontent","headercontent","instanceconfig","hiddenRadioValue","ATTRS","minheight","baseheight","maxheight","closeButtonTitle","validator","Lang","isString","value","cancelListenevents","thisevent","length","shift","off","hide","cancelPopup","e","preventDefault","_getClassNames","args","prefix","name","results","push","toLowerCase","arg","prepareChooser","addClass","paramkey","params","bodyContent","html","headerContent","width","draggable","visible","zindex","modal","shim","focusOnPreviousTargetAfterHide","render","extraClasses","M","core","dialogue","remove","get","one","getDOMNode","find","append","centerDialogue","bb","winheight","newheight","totalheight","shouldResizeFullscreen","lockScroll","isActive","enableScrollLock","disableScrollLock","css","dialogueheight","getStyle","match","replace","handleKeyPress","keyCode","updateHiddenRadioValue","attr","optionSelected","publish","OPTION_SELECTED","checkOptions","each","key","option","optiondiv","parent","is","removeAttr","focus","removeClass","displayChooser","document","on","window","target","parents","submit","show","setupChooserDialogue","body","header","config"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A system for displaying notifications to users from the session.\n *\n * Wrapper for the YUI M.core.notification class. Allows us to\n * use the YUI version in AMD code until it is replaced.\n *\n * @module     core/activity_chooser_dialogue\n * @package    core\n * @copyright  2019 Mihail Geshoski <mihail@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.7\n */\ndefine(\n    [\n        'core/yui',\n        'jquery',\n        'core/pubsub',\n        'core/activity_chooser_events'\n    ],\n    function(\n        Y,\n        $,\n        PubSub,\n        ActivityChooserEvents\n    ) {\n\n     // The panel widget\n    var panel = null;\n\n    // The submit button - we disable this until an element is set\n    var submitbutton = null;\n\n    // The chooserdialogue container\n    var container = null;\n\n    var options = null;\n\n    // Any event listeners we may need to cancel later\n    var listenevents = [];\n\n    var bodycontent = null;\n    var headercontent = null;\n    var instanceconfig = null;\n\n    // The hidden field storing the disabled element values for submission.\n    var hiddenRadioValue = null;\n\n    var ATTRS = {\n        /**\n         * The minimum height (in pixels) before resizing is prevented and scroll\n         * locking disabled.\n         *\n         * @attribute minheight\n         * @type Number\n         * @default 300\n         */\n        minheight: 300,\n\n        /**\n         * The base height??\n         *\n         * @attribute baseheight\n         * @type Number\n         * @default 400\n         */\n        baseheight: 400,\n\n        /**\n         * The maximum height (in pixels) at which we stop resizing.\n         *\n         * @attribute maxheight\n         * @type Number\n         * @default 300\n         */\n        maxheight: 660,\n\n        /**\n         * The title of the close button.\n         *\n         * @attribute closeButtonTitle\n         * @type String\n         * @default 'Close'\n         */\n        closeButtonTitle: {\n            validator: Y.Lang.isString,\n            value: 'Close'\n        }\n    };\n\n    var setupChooserDialogue = function(body, header, config) {\n        bodycontent = body;\n        headercontent = header;\n        instanceconfig = config;\n    };\n\n    /**\n     * Cancel any listen events in the listenevents queue\n     *\n     * Several locations add event handlers which should only be called before the form is submitted. This provides\n     * a way of cancelling those events.\n     *\n     * @method cancel_listenevents\n     */\n    var cancelListenevents = function() {\n        // Detach all listen events to prevent duplicate triggers\n        var thisevent;\n        while (listenevents.length) {\n            thisevent = listenevents.shift();\n            $(thisevent).off();\n        }\n    };\n\n    var hide = function() {\n        // Cancel all listen events\n        cancelListenevents();\n        container.off();\n        panel.hide();\n    };\n\n    var cancelPopup = function(e) {\n        // Prevent normal form submission before hiding\n        e.preventDefault();\n        hide();\n    };\n\n      /**\n     * Return an array of class names prefixed with 'chooserdialogue-' and\n     * the name of the type of dialogue.\n     *\n     * Note: Class name are converted to lower-case.\n     *\n     * If an array of arguments is supplied, each of these is prefixed and\n     * lower-cased also.\n     *\n     * If no arguments are supplied, then the prefix is returned on it's\n     * own.\n     *\n     * @method _getClassNames\n     * @param {Array} [args] Any additional names to prefix and lower-case.\n     * @return {Array}\n     * @private\n     */\n    var _getClassNames = function(args) {\n        var prefix = 'chooserdialogue-' + name,\n            results = [];\n\n        results.push(prefix.toLowerCase());\n        if (args) {\n            var arg;\n            for (arg in args) {\n                results.push((prefix + '-' + arg).toLowerCase());\n            }\n        }\n\n        return results;\n    };\n\n    var prepareChooser = function() {\n        if (panel) {\n            return;\n        }\n\n        // Ensure that we're showing the JS version of the chooser.\n        $('body').addClass('jschooser');\n        // Set Default options\n        var paramkey,\n            params = {\n                bodyContent: bodycontent.html(),\n                headerContent: headercontent.html(),\n                width: '540px',\n                draggable: true,\n                visible: false, // Hide by default\n                zindex: 100, // Display in front of other items\n                modal: true, // This dialogue should be modal.\n                shim: true,\n                closeButtonTitle: ATTRS.closeButtonTitle,\n                focusOnPreviousTargetAfterHide: true,\n                render: false,\n                extraClasses: _getClassNames()\n            };\n\n        // Override with additional options\n        for (paramkey in instanceconfig) {\n          params[paramkey] = instanceconfig[paramkey];\n        }\n\n        // Create the panel\n        panel = new M.core.dialogue(params);\n\n        // Remove the template for the chooser\n        bodycontent.remove();\n        headercontent.remove();\n\n        // Hide and then render the panel\n        panel.hide();\n        panel.render();\n\n        // Set useful links.\n        //container = $('.choosercontainer');\n        container = $(panel.get('boundingBox').one('.choosercontainer').getDOMNode());\n        options = container.find('.option input[type=radio]');\n\n        // The hidden form element we use when submitting.\n        hiddenRadioValue = $('<input type=\"hidden\" value=\"\" name=\"\"/>');\n        container.find('form').append(hiddenRadioValue);\n\n        // Add the chooserdialogue class to the container for styling\n        panel.get('boundingBox').addClass('chooserdialogue');\n    };\n\n    /**\n      * Calculate the optimum height of the chooser dialogue\n      *\n      * This tries to set a sensible maximum and minimum to ensure that some options are always shown, and preferably\n      * all, whilst fitting the box within the current viewport.\n      *\n      * @method center_dialogue\n      * @param Node {dialogue} Y.Node The dialogue\n      */\n    var centerDialogue = function(dialogue) {\n        var bb = panel.get('boundingBox'),\n            winheight = bb.get('winHeight'),\n            newheight, totalheight;\n\n        if (panel.shouldResizeFullscreen()) {\n            // No custom sizing required for a fullscreen dialog.\n            return;\n        }\n\n        // Try and set a sensible max-height -- this must be done before setting the top\n        // Set a default height of 640px\n        newheight = ATTRS.maxheight;\n        if (winheight <= newheight) {\n            // Deal with smaller window sizes\n            if (winheight <= ATTRS.minheight) {\n                newheight = ATTRS.minheight;\n            } else {\n                newheight = winheight;\n            }\n        }\n\n        // If the dialogue is larger than a reasonable minimum height, we\n        // disable the page scrollbars.\n        if (newheight > ATTRS.minheight) {\n            // Disable the page scrollbars.\n            if (panel.lockScroll && !panel.lockScroll.isActive()) {\n                panel.lockScroll.enableScrollLock(true);\n            }\n        } else {\n            // Re-enable the page scrollbars.\n            if (panel.lockScroll && panel.lockScroll.isActive()) {\n                panel.lockScroll.disableScrollLock();\n            }\n        }\n\n        // Take off 15px top and bottom for borders, plus 40px each for the title and button area before setting the\n        // new max-height\n        totalheight = newheight;\n        newheight = newheight - (15 + 15 + 40 + 40);\n        $(dialogue).css('maxHeight', newheight + 'px');\n\n        var dialogueheight = bb.getStyle('height');\n        if (dialogueheight.match(/.*px$/)) {\n            dialogueheight = dialogueheight.replace(/px$/, '');\n        } else {\n            dialogueheight = totalheight;\n        }\n\n        if (dialogueheight < ATTRS.baseheight) {\n            dialogueheight = ATTRS.baseheight;\n            $(dialogue).css('height', dialogueheight + 'px');\n        }\n\n        panel.centerDialogue();\n    };\n\n    var handleKeyPress = function(e) {\n        if (e.keyCode === 27) {\n            cancelPopup(e);\n        }\n    };\n\n    var updateHiddenRadioValue = function(name, value) {\n        hiddenRadioValue.attr({\n            value: value,\n            name: name\n        });\n    };\n\n    var optionSelected = function(e) {\n        // Set a hidden input field with the value and name of the radio button.  When we submit the form, we\n        // disable the radios to prevent duplicate submission. This has the result however that the value is never\n        // submitted so we set this value to a hidden field instead\n        updateHiddenRadioValue(e.name, e.value);\n        PubSub.publish(ActivityChooserEvents.OPTION_SELECTED, e);\n    };\n\n    var checkOptions = function() {\n        // Check which options are set, and change the parent class\n        // to show/hide help as required\n        options.each(function(key, option) {\n            var optiondiv = $(option).parent().parent();\n            if ($(this).is(':checked')) {\n                $(optiondiv).addClass('selected');\n\n                // Trigger any events for this option\n                optionSelected(option);\n\n                // Ensure that the form may be submitted\n                submitbutton.removeAttr('disabled');\n\n                // Ensure that the radio remains focus so that keyboard navigation is still possible\n                $(option).focus();\n            } else {\n                optiondiv.removeClass('selected');\n            }\n        }, this);\n    };\n\n    /**\n      * Display the module chooser\n      *\n      * @method display_chooser\n      * @param {EventFacade} e Triggering Event\n      */\n    var displayChooser = function(e) {\n        var bb, dialogue, thisevent;\n        prepareChooser();\n\n        // Stop the default event actions before we proceed\n        e.preventDefault();\n\n        bb = panel.get('boundingBox');\n        dialogue = container.find('.alloptions');\n        // This will detect a change in orientation and retrigger centering\n        thisevent = $(document).on('orientationchange', function() {\n            centerDialogue(dialogue);\n        });\n        listenevents.push(thisevent);\n\n        // Detect window resizes (most browsers)\n        thisevent = $(window).on('resize', function() {\n            centerDialogue(dialogue);\n        });\n        listenevents.push(thisevent);\n\n        // These will trigger a check_options call to display the correct help\n        thisevent = container.on('click', function() {\n            checkOptions();\n        });\n        listenevents.push(thisevent);\n        thisevent = container.on('key_up', function() {\n            checkOptions();\n        });\n        listenevents.push(thisevent);\n        thisevent = container.on('dblclick', function(e) {\n            if ($(e.target).parents('div.option').length) {\n                checkOptions();\n\n                // Prevent duplicate submissions\n                submitbutton.attr('disabled', 'disabled');\n                options.attr('disabled', 'disabled');\n                cancelListenevents();\n\n                container.find('form').submit();\n            }\n        });\n        listenevents.push(thisevent);\n\n        container.find('form').on('submit', function() {\n            // Prevent duplicate submissions on submit\n            submitbutton.attr('disabled', 'disabled');\n            options.attr('disabled', 'disabled');\n            cancelListenevents();\n        });\n\n        // Hook onto the cancel button to hide the form\n        thisevent = container.find('.addcancel').on('click', function(e) {\n            cancelPopup(e);\n        });\n        listenevents.push(thisevent);\n\n        // Hide will be managed by cancel_popup after restoring the body overflow\n        thisevent = bb.one('button.closebutton').on('click', function(e) {\n            cancelPopup(e);\n        });\n        listenevents.push(thisevent);\n\n        // Grab global keyup events and handle them\n        thisevent = $(document).on('keydown', handleKeyPress, this);\n        listenevents.push(thisevent);\n\n        // Add references to various elements we adjust\n        submitbutton = container.find('.submitbutton');\n\n        // Disable the submit element until the user makes a selection\n        submitbutton.attr('disabled', 'true');\n\n        // Ensure that the options are shown\n        options.each(function() {\n            $(this).removeAttr('disabled');\n        });\n\n        // Display the panel\n        panel.show(e);\n\n        // Re-centre the dialogue after we've shown it.\n        centerDialogue(dialogue);\n\n        // Finally, focus the first radio element - this enables form selection via the keyboard\n        container.find('.option input[type=radio]').focus();\n\n        // Trigger check_options to set the initial jumpurl\n        checkOptions();\n    };\n\n    return /** @alias module:core/activity_chooser_dialogue */{\n\n        /**\n         * Poll the server for any new notifications.\n         *\n         * @method fetchNotifications\n         */\n        setupChooserDialogue: setupChooserDialogue,\n\n        /**\n         * Add a notification to the page.\n         *\n         * Note: This does not cause the notification to be added to the session.\n         *\n         * @method addNotification\n         * @param {Object}  notification                The notification to add.\n         * @param {string}  notification.message        The body of the notification\n         * @param {string}  notification.type           The type of notification to add (error, warning, info, success).\n         * @param {Boolean} notification.closebutton    Whether to show the close button.\n         * @param {Boolean} notification.announce       Whether to announce to screen readers.\n         */\n        displayChooser: displayChooser,\n        updateHiddenRadioValue: updateHiddenRadioValue\n    };\n});\n"],"file":"activity_chooser_dialogue.min.js"}