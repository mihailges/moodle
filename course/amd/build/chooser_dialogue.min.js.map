{"version":3,"sources":["../src/chooser_dialogue.js"],"names":["carouselPageTo","e","mappedModules","modal","carousel","module","target","closest","selectors","regions","chooserOption","container","moduleName","dataset","modname","Templates","renderForPromise","get","html","js","help","getBody","querySelector","replaceNodeContents","on","helpContent","chooserSummary","description","focus","registerListenerEvents","searchInput","actions","search","addEventListener","off","optionActions","showSummary","matches","closeOption","allModules","document","modules","caller","clearSearch","value","toggleSearchResultsView","chooserOptions","initKeyboardNavigation","chooserOptionsContainer","querySelectorAll","Array","from","forEach","element","keyCode","enter","space","arrowRight","arrowDown","currentOption","nextOption","nextElementSibling","firstOption","firstElementChild","clickErrorHandler","arrowLeft","arrowUp","previousOption","previousElementSibling","lastOption","lastElementChild","home","end","tab","closeBtn","getModal","hide","item","fallback","renderSearchResults","searchResultsData","searchResultsContainer","searchResultsNumber","length","templateData","searchQuery","searchActive","searchResults","searchModules","searchResultItemsContainer","searchResultItems","toggleSearchResultsContainer","toggleClearSearchButton","active","clearSearchutton","style","display","setAttribute","classList","remove","removeAttribute","add","searchTerm","toLowerCase","activity","activityName","label","activityDesc","includes","push","displayChooser","origin","sectionModules","Map","set","modulename","getRoot","ModalEvents","hidden","show"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A type of dialogue used as for choosing options.\n *\n * @module     core_course/chooser_dialogue\n * @package    core\n * @copyright  2019 Mihail Geshoski <mihail@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as ModalEvents from 'core/modal_events';\nimport selectors from 'core_course/local/chooser/selectors';\nimport * as Templates from 'core/templates';\nimport {end, arrowLeft, arrowRight, arrowUp, arrowDown, home, tab, enter, space} from 'core/key_codes';\nimport {debounce} from 'core/utils';\n\n/**\n * Given an event from the main module 'page' navigate to it's help section via a carousel.\n *\n * @method carouselPageTo\n * @param {Event} e Triggering Event\n * @param {Map} mappedModules A map of all of the modules we are working with with K: mod_name V: {Object}\n * @param {Promise} modal Our modal that we are working with\n * @param {jQuery} carousel Our initialized carousel to manipulate\n */\nconst carouselPageTo = async(e, mappedModules, modal, carousel) => {\n    // Get the systems name for the module just clicked.\n    const module = e.target.closest(selectors.regions.chooserOption.container);\n    const moduleName = module.dataset.modname;\n    // Build up the html & js ready to place into the help section.\n    const {html, js} = await Templates.renderForPromise('core_course/chooser_help', mappedModules.get(moduleName));\n    const help = modal.getBody()[0].querySelector(selectors.regions.help);\n    await Templates.replaceNodeContents(help, html, js);\n    // Trigger the transition between 'pages'.\n    carousel.carousel('next');\n    carousel.carousel('pause');\n\n    carousel.on('slid.bs.carousel', () => {\n        const helpContent = help.querySelector(selectors.regions.chooserSummary.description);\n        helpContent.focus();\n    });\n};\n\n/**\n * Register chooser related event listeners.\n *\n * @method registerListenerEvents\n * @param {Promise} modal Our modal that we are working with\n * @param {Map} mappedModules A map of all of the modules we are working with with K: mod_name V: {Object}\n */\nconst registerListenerEvents = (modal, mappedModules) => {\n    const searchInput = modal.getBody()[0].querySelector(selectors.actions.search);\n\n    modal.getBody()[0].addEventListener('click', async(e) => {\n        const carousel = $(selectors.regions.carousel);\n        carousel.carousel();\n        carousel.off('keydown.bs.carousel');\n        carousel.carousel('pause');\n        if (e.target.closest(selectors.actions.optionActions.showSummary)) {\n            await carouselPageTo(e, mappedModules, modal, carousel);\n        }\n\n        // From the help screen go back to the module overview.\n        if (e.target.matches(selectors.actions.closeOption)) {\n            // Trigger the transition between 'pages'.\n            carousel.carousel('prev');\n            carousel.on('slid.bs.carousel', async() => {\n                const module = e.target.dataset.modname;\n                const allModules = document.querySelector(selectors.regions.modules);\n                const caller = allModules.querySelector(`[role=\"gridcell\"][data-modname=${module}]`);\n                await caller.focus();\n            });\n        }\n        // The \"clear search\" button is triggered.\n        if (e.target.matches(selectors.actions.clearSearch)) {\n            // Clear the entered search query in the search bar and hide the search results container.\n            searchInput.value = \"\";\n            searchInput.focus();\n            toggleSearchResultsView(modal, mappedModules, searchInput.value);\n        }\n    });\n\n    // Register event listeners related to the keyboard navigation controls.\n    const chooserOptions = modal.getBody()[0].querySelector(selectors.regions.chooserOptions);\n    initKeyboardNavigation(modal, mappedModules, chooserOptions);\n\n    // The search input is triggered.\n    searchInput.addEventListener('input', debounce(() => {\n        // Display the search results.\n        toggleSearchResultsView(modal, mappedModules, searchInput.value);\n    }, 300));\n};\n\n/**\n * Initialise the keyboard navigation controls for the chooser.\n *\n * @method initKeyboardNavigation\n * @param {Promise} modal Our modal that we are working with\n * @param {Map} mappedModules A map of all of the modules we are working with with K: mod_name V: {Object}\n * @param {HTMLElement} chooserOptionsContainer The section that contains the chooser items\n */\nconst initKeyboardNavigation = (modal, mappedModules, chooserOptionsContainer) => {\n    const chooserOptions = chooserOptionsContainer.querySelectorAll(selectors.regions.chooserOption.container);\n\n    Array.from(chooserOptions).forEach((element) => {\n        return element.addEventListener('keyup', async(e) => {\n\n            // Check for enter/ space triggers for showing the help.\n            if (e.keyCode === enter || e.keyCode === space) {\n                if (e.target.matches(selectors.actions.optionActions.showSummary)) {\n                    const carousel = $(selectors.regions.carousel);\n                    carousel.carousel();\n                    carousel.off('keydown.bs.carousel');\n                    carousel.carousel('pause');\n                    await carouselPageTo(e, mappedModules, modal, carousel);\n                }\n            }\n\n            // Next.\n            if (e.keyCode === arrowRight || e.keyCode === arrowDown) {\n                if (!e.target.matches(selectors.actions.optionActions.showSummary)) {\n                    const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                    const nextOption = currentOption.nextElementSibling;\n                    const firstOption = chooserOptionsContainer.firstElementChild;\n                    clickErrorHandler(nextOption, firstOption);\n                }\n            }\n\n            // Previous.\n            if (e.keyCode === arrowLeft || e.keyCode === arrowUp) {\n                if (!e.target.matches(selectors.actions.optionActions.showSummary)) {\n                    const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                    const previousOption = currentOption.previousElementSibling;\n                    const lastOption = chooserOptionsContainer.lastElementChild;\n                    clickErrorHandler(previousOption, lastOption);\n                }\n            }\n\n            if (e.keyCode === home) {\n                const firstOption = chooserOptionsContainer.firstElementChild;\n                firstOption.focus();\n            }\n\n            if (e.keyCode === end) {\n                const lastOption = chooserOptionsContainer.lastElementChild;\n                lastOption.focus();\n            }\n\n            if (e.keyCode === tab) {\n                // We want the user to get focus on the close button if they tab through an entire module.\n                if (e.target.matches(selectors.regions.chooserOption.container) &&\n                        e.target !== chooserOptionsContainer.firstElementChild) {\n                    const closeBtn = modal.getModal()[0].querySelector(selectors.actions.hide);\n                    closeBtn.focus();\n                }\n            }\n        });\n    });\n};\n\n/**\n * Small error handling function to make sure the navigated to object exists\n *\n * @method clickErrorHandler\n * @param {HTMLElement} item What we want to check exists\n * @param {HTMLElement} fallback If we dont match anything fallback the focus\n */\nconst clickErrorHandler = (item, fallback) => {\n    if (item !== null) {\n        item.focus();\n    } else {\n        fallback.focus();\n    }\n};\n\n/**\n * Render the search results in a defined container\n *\n * @method renderSearchResults\n * @param {Object} modal Our created modal for the section\n * @param {Object} searchResultsData Data containing the module items that satisfy the search criteria\n * @param {HTMLElement} searchResultsContainer The container where the data should be rendered\n */\nconst renderSearchResults = async(modal, searchResultsData, searchResultsContainer) => {\n    const searchResultsNumber = searchResultsData.length;\n    const templateData = {\n        'searchresultsnumber': searchResultsNumber,\n        'searchresults': searchResultsData\n    };\n    // Build up the html & js ready to place into the help section.\n    const {html, js} = await Templates.renderForPromise('core_course/chooser-search-results', templateData);\n    await Templates.replaceNodeContents(searchResultsContainer, html, js);\n};\n\n/**\n * Toggle (display/hide) the search results depending on the value of the search query\n *\n * @method toggleSearchResultsView\n * @param {Object} modal Our created modal for the section\n * @param {Map} mappedModules A map of all of the modules we are working with with K: mod_name V: {Object}\n * @param {String} searchQuery The search query\n */\nconst toggleSearchResultsView = async(modal, mappedModules, searchQuery) => {\n    const searchActive = searchQuery.length > 0;\n    const searchResultsContainer = modal.getBody()[0].querySelector(selectors.regions.searchResults);\n\n    if (searchActive) {\n        const searchResultsData = searchModules(mappedModules, searchQuery);\n        await renderSearchResults(modal, searchResultsData, searchResultsContainer);\n        const searchResultItemsContainer = searchResultsContainer.querySelector(selectors.regions.searchResultItems);\n        // Register keyboard events on the created search result items.\n        initKeyboardNavigation(modal, mappedModules, searchResultItemsContainer);\n    }\n\n    toggleSearchResultsContainer(modal, searchActive);\n    toggleClearSearchButton(modal, searchActive);\n};\n\n/**\n * Toggle (display/hide) the \"clear search\" button in the activity chooser search bar\n *\n * @method toggleClearSearchButton\n * @param {Object} modal Our created modal for the section\n * @param {Boolean} active Whether the search mode is activated\n */\nconst toggleClearSearchButton = (modal, active) => {\n    const clearSearchutton = modal.getBody()[0].querySelector(selectors.actions.clearSearch);\n    if (active) {\n        clearSearchutton.style.display = \"block\";\n    } else {\n        clearSearchutton.style.display = \"none\";\n    }\n};\n\n/**\n * Toggle (display/hide) the search results container\n *\n * @method toggleSearchResultsContainer\n * @param {Object} modal Our created modal for the section\n * @param {Boolean} active Whether the search mode is activated\n */\nconst toggleSearchResultsContainer = (modal, active) => {\n    const searchResultsContainer = modal.getBody()[0].querySelector(selectors.regions.searchResults);\n    const chooserOptionsContainer = modal.getBody()[0].querySelector(selectors.regions.chooserOptions);\n\n    if (active) {\n        chooserOptionsContainer.setAttribute('hidden', 'hidden');\n        chooserOptionsContainer.classList.remove(\"d-flex\");\n        searchResultsContainer.removeAttribute('hidden');\n    } else {\n        searchResultsContainer.setAttribute('hidden', 'hidden');\n        chooserOptionsContainer.removeAttribute('hidden');\n        chooserOptionsContainer.classList.add(\"d-flex\");\n    }\n};\n\n/**\n * Return the list of modules which have a name or description that matches the given search term.\n *\n * @method searchModules\n * @param {Array} modules List of available modules\n * @param {String} searchTerm The search term to match\n * @return {Array}\n */\nconst searchModules = (modules, searchTerm) => {\n    if (searchTerm === '') {\n        return modules;\n    }\n\n    searchTerm = searchTerm.toLowerCase();\n\n    const searchResults = [];\n\n    modules.forEach((activity) => {\n        const activityName = activity.label.toLowerCase();\n        const activityDesc = activity.description.toLowerCase();\n        if (activityName.includes(searchTerm) || activityDesc.includes(searchTerm)) {\n            searchResults.push(activity);\n        }\n    });\n\n    return searchResults;\n};\n\n/**\n * Display the module chooser.\n *\n * @method displayChooser\n * @param {HTMLElement} origin The calling button\n * @param {Object} modal Our created modal for the section\n * @param {Array} sectionModules An array of all of the built module information\n */\nexport const displayChooser = async(origin, modal, sectionModules) => {\n\n    // Make a map so we can quickly fetch a specific module's object for either rendering or searching.\n    const mappedModules = new Map();\n    sectionModules.forEach((module) => {\n        mappedModules.set(module.modulename, module);\n    });\n\n    // Register event listeners.\n    await registerListenerEvents(modal, mappedModules);\n\n    // We want to focus on the action select when the dialog is closed.\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        try {\n            // Just in case a user shuts the chooser on the help screen set it back to default.\n            const carousel = $(selectors.regions.carousel);\n            carousel.carousel();\n            carousel.carousel(0);\n\n            origin.focus();\n        } catch (e) {\n            // eslint-disable-line\n        }\n    });\n\n\n    modal.show();\n};\n"],"file":"chooser_dialogue.min.js"}