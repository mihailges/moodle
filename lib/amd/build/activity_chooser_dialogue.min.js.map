{"version":3,"sources":["../src/activity_chooser_dialogue.js"],"names":["define","Y","$","PubSub","ActivityChooserEvents","panel","container","options","listenevents","bodycontent","headercontent","instanceconfig","hiddenRadioValue","ATTRS","minheight","baseheight","maxheight","closeButtonTitle","validator","Lang","isString","value","cancelListenevents","thisevent","length","shift","off","hide","cancelPopup","e","preventDefault","_getClassNames","args","results","push","toLowerCase","arg","prepareChooser","addClass","paramkey","params","bodyContent","html","headerContent","width","draggable","visible","zindex","modal","shim","focusOnPreviousTargetAfterHide","render","extraClasses","M","core","dialogue","remove","get","one","getDOMNode","find","append","centerDialogue","bb","winheight","newheight","totalheight","shouldResizeFullscreen","lockScroll","isActive","enableScrollLock","disableScrollLock","css","dialogueheight","getStyle","match","replace","handleKeyPress","keyCode","updateHiddenRadioValue","name","attr","optionSelected","publish","OPTION_SELECTED","checkOptions","each","key","option","optiondiv","parent","is","removeAttr","focus","removeClass","openTypeSummary","typeSummaryElement","position","scrollTop","height","outerHeight","setTypeSummaryPositionAndHeight","typeSummaryContentElement","element","typeSummaryContentEl","typeSumarryFooterEl","footerHeight","displayChooser","sectionid","anchors","index","anchor","href","on","typeSummaryEl","target","closest","setTimeout","document","window","show","setupChooserDialogue","body","header","config"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A system for displaying notifications to users from the session.\n *\n * Wrapper for the YUI M.core.notification class. Allows us to\n * use the YUI version in AMD code until it is replaced.\n *\n * @module     core/activity_chooser_dialogue\n * @package    core\n * @copyright  2019 Mihail Geshoski <mihail@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.7\n */\ndefine(\n    [\n        'core/yui',\n        'jquery',\n        'core/pubsub',\n        'core/activity_chooser_events'\n    ],\n    function(\n        Y,\n        $,\n        PubSub,\n        ActivityChooserEvents\n    ) {\n\n     // The panel widget\n    var panel = null;\n\n    // The submit button - we disable this until an element is set\n    var submitbutton = null;\n\n    // The chooserdialogue container\n    var container = null;\n\n    var options = null;\n\n    // Any event listeners we may need to cancel later\n    var listenevents = [];\n\n    var bodycontent = null;\n    var headercontent = null;\n    var instanceconfig = null;\n\n    // The hidden field storing the disabled element values for submission.\n    var hiddenRadioValue = null;\n\n    var ATTRS = {\n        /**\n         * The minimum height (in pixels) before resizing is prevented and scroll\n         * locking disabled.\n         *\n         * @attribute minheight\n         * @type Number\n         * @default 300\n         */\n        minheight: 300,\n\n        /**\n         * The base height??\n         *\n         * @attribute baseheight\n         * @type Number\n         * @default 400\n         */\n        baseheight: 400,\n\n        /**\n         * The maximum height (in pixels) at which we stop resizing.\n         *\n         * @attribute maxheight\n         * @type Number\n         * @default 300\n         */\n        maxheight: 660,\n\n        /**\n         * The title of the close button.\n         *\n         * @attribute closeButtonTitle\n         * @type String\n         * @default 'Close'\n         */\n        closeButtonTitle: {\n            validator: Y.Lang.isString,\n            value: 'Close'\n        }\n    };\n\n    var setupChooserDialogue = function(body, header, config) {\n        bodycontent = body;\n        headercontent = header;\n        instanceconfig = config;\n    };\n\n    /**\n     * Cancel any listen events in the listenevents queue\n     *\n     * Several locations add event handlers which should only be called before the form is submitted. This provides\n     * a way of cancelling those events.\n     *\n     * @method cancel_listenevents\n     */\n    var cancelListenevents = function() {\n        // Detach all listen events to prevent duplicate triggers\n        var thisevent;\n        while (listenevents.length) {\n            thisevent = listenevents.shift();\n            $(thisevent).off();\n        }\n    };\n\n    var hide = function() {\n        // Cancel all listen events\n        cancelListenevents();\n        container.off();\n        panel.hide();\n    };\n\n    var cancelPopup = function(e) {\n        // Prevent normal form submission before hiding\n        e.preventDefault();\n        hide();\n    };\n\n      /**\n     * Return an array of class names prefixed with 'modchooserdialogue-' and\n     * the name of the type of dialogue.\n     *\n     * Note: Class name are converted to lower-case.\n     *\n     * If an array of arguments is supplied, each of these is prefixed and\n     * lower-cased also.\n     *\n     * If no arguments are supplied, then the prefix is returned on it's\n     * own.\n     *\n     * @method _getClassNames\n     * @param {Array} [args] Any additional names to prefix and lower-case.\n     * @return {Array}\n     * @private\n     */\n    var _getClassNames = function(args) {\n        var prefix = 'modchooserdialogue-course-modchooser',\n            results = [];\n\n        results.push(prefix.toLowerCase());\n        if (args) {\n            var arg;\n            for (arg in args) {\n                results.push((prefix + '-' + arg).toLowerCase());\n            }\n        }\n\n        return results;\n    };\n\n    var prepareChooser = function() {\n        if (panel) {\n            return;\n        }\n\n        // Ensure that we're showing the JS version of the chooser.\n        $('body').addClass('jschooser');\n        // Set Default options.\n        var paramkey,\n            params = {\n                bodyContent: bodycontent.html(),\n                headerContent: headercontent.html(),\n                width: '540px',\n                draggable: true,\n                visible: false, // Hide by default\n                zindex: 100, // Display in front of other items\n                modal: true, // This dialogue should be modal.\n                shim: true,\n                closeButtonTitle: ATTRS.closeButtonTitle,\n                focusOnPreviousTargetAfterHide: true,\n                render: false,\n                extraClasses: _getClassNames()\n            };\n\n        // Override with additional options.\n        for (paramkey in instanceconfig) {\n          params[paramkey] = instanceconfig[paramkey];\n        }\n\n        // Create the panel\n        panel = new M.core.dialogue(params);\n\n        // Remove the template for the chooser.\n        bodycontent.remove();\n        headercontent.remove();\n\n        // Hide and then render the panel.\n        panel.hide();\n        panel.render();\n\n        // Set useful links.\n        //container = $('.choosercontainer');\n        container = $(panel.get('boundingBox').one('.modchoosercontainer').getDOMNode());\n        options = container.find('.option');\n\n        // The hidden form element we use when submitting.\n        hiddenRadioValue = $('<input type=\"hidden\" value=\"\" name=\"\"/>');\n        container.find('form').append(hiddenRadioValue);\n\n        // Add the chooserdialogue class to the container for styling.\n        panel.get('boundingBox').addClass('modchooserdialogue');\n    };\n\n    /**\n      * Calculate the optimum height of the chooser dialogue\n      *\n      * This tries to set a sensible maximum and minimum to ensure that some options are always shown, and preferably\n      * all, whilst fitting the box within the current viewport.\n      *\n      * @method center_dialogue\n      * @param Node {dialogue} Y.Node The dialogue\n      */\n    var centerDialogue = function(dialogue) {\n        var bb = panel.get('boundingBox'),\n            winheight = bb.get('winHeight'),\n            newheight, totalheight;\n\n        if (panel.shouldResizeFullscreen()) {\n            // No custom sizing required for a fullscreen dialog.\n            return;\n        }\n\n        // Try and set a sensible max-height -- this must be done before setting the top\n        // Set a default height of 640px\n        newheight = ATTRS.maxheight;\n        if (winheight <= newheight) {\n            // Deal with smaller window sizes\n            if (winheight <= ATTRS.minheight) {\n                newheight = ATTRS.minheight;\n            } else {\n                newheight = winheight;\n            }\n        }\n\n        // If the dialogue is larger than a reasonable minimum height, we\n        // disable the page scrollbars.\n        if (newheight > ATTRS.minheight) {\n            // Disable the page scrollbars.\n            if (panel.lockScroll && !panel.lockScroll.isActive()) {\n                panel.lockScroll.enableScrollLock(true);\n            }\n        } else {\n            // Re-enable the page scrollbars.\n            if (panel.lockScroll && panel.lockScroll.isActive()) {\n                panel.lockScroll.disableScrollLock();\n            }\n        }\n\n        // Take off 15px top and bottom for borders, plus 40px each for the title and button area before setting the\n        // new max-height.\n        totalheight = newheight;\n        newheight = newheight - (15 + 15 + 40 + 40);\n        $(dialogue).css('maxHeight', newheight + 'px');\n\n        var dialogueheight = bb.getStyle('height');\n        if (dialogueheight.match(/.*px$/)) {\n            dialogueheight = dialogueheight.replace(/px$/, '');\n        } else {\n            dialogueheight = totalheight;\n        }\n\n        if (dialogueheight < ATTRS.baseheight) {\n            dialogueheight = ATTRS.baseheight;\n            $(dialogue).css('height', dialogueheight + 'px');\n        }\n\n        panel.centerDialogue();\n    };\n\n    var handleKeyPress = function(e) {\n        if (e.keyCode === 27) {\n            cancelPopup(e);\n        }\n    };\n\n    var updateHiddenRadioValue = function(name, value) {\n        hiddenRadioValue.attr({\n            value: value,\n            name: name\n        });\n    };\n\n    var optionSelected = function(e) {\n        // Set a hidden input field with the value and name of the radio button.  When we submit the form, we\n        // disable the radios to prevent duplicate submission. This has the result however that the value is never\n        // submitted so we set this value to a hidden field instead.\n        updateHiddenRadioValue(e.name, e.value);\n        PubSub.publish(ActivityChooserEvents.OPTION_SELECTED, e);\n    };\n\n    var checkOptions = function() {\n        // Check which options are set, and change the parent class\n        // to show/hide help as required.\n        options.each(function(key, option) {\n            var optiondiv = $(option).parent().parent();\n            if ($(this).is(':checked')) {\n                $(optiondiv).addClass('selected');\n\n                // Trigger any events for this option.\n                optionSelected(option);\n\n                // Ensure that the form may be submitted.\n                submitbutton.removeAttr('disabled');\n\n                // Ensure that the radio remains focus so that keyboard navigation is still possible.\n                $(option).focus();\n            } else {\n                optiondiv.removeClass('selected');\n            }\n        }, this);\n    };\n\n    var openTypeSummary = function(typeSummaryElement) {\n        // Get the current scroll position of the .alloption element.\n        var position = $('.alloptions').scrollTop();\n        // Get the height of the .alloption element.\n        var height = $('.alloptions').outerHeight();\n        // Disable the scroll of .alloptions.\n        $('.alloptions').addClass('noscroll');\n\n        setTypeSummaryPositionAndHeight(typeSummaryElement, position, height);\n\n        var typeSummaryContentElement = typeSummaryElement.find('.content');\n        // Set the scroll of the type summary content element to top.\n        if (typeSummaryContentElement.scrollTop() > 0) {\n            typeSummaryContentElement.scrollTop(0);\n        }\n        // Show the particular summary overlay.\n        typeSummaryElement.addClass('open');\n    };\n\n    var setTypeSummaryPositionAndHeight = function(element, position, height) {\n        var typeSummaryContentEl = element.find('.content');\n        var typeSumarryFooterEl = element.find('.action-footer');\n        var footerHeight = typeSumarryFooterEl.height();\n        var contentHeight = height - footerHeight;\n\n        typeSummaryContentEl.css({'height' : contentHeight + 'px'});\n\n        element.css({'top' : position + 'px', 'height' : height + 'px'});\n    };\n\n    /**\n      * Display the module chooser.\n      *\n      * @method display_chooser\n      * @param {EventFacade} e Triggering Event\n      */\n    var displayChooser = function(e, sectionid) {\n        var bb, dialogue, thisevent;\n        prepareChooser();\n\n        // Stop the default event actions before we proceed.\n        e.preventDefault();\n\n        bb = panel.get('boundingBox');\n        dialogue = container.find('.alloptions');\n\n        // Find all anchors used to add an activity and append the section param to the url.\n        var anchors = dialogue.find('.option .modicon a, .option .typesummary .action-footer .addbutton');\n        anchors.each(function(index, anchor) {\n            anchor.href += '&section=' + sectionid;\n        });\n\n        thisevent = $('.info i').on('click', function(e) {\n            var typeSummaryEl = $(e.target).closest('label').find('.typesummary');\n            openTypeSummary(typeSummaryEl);\n        });\n        listenevents.push(thisevent);\n\n        thisevent = $('.closetypesummary').on('click', function(e) {\n            setTimeout(function() {\n                var typeSummaryEl = $(e.target).closest('label').find('.typesummary');\n                typeSummaryEl.removeClass('open');\n\n                $('.alloptions').removeClass('noscroll');\n            }, 100);\n        });\n        listenevents.push(thisevent);\n\n        // This will detect a change in orientation and retrigger centering.\n        thisevent = $(document).on('orientationchange', function() {\n            centerDialogue(dialogue);\n        });\n        listenevents.push(thisevent);\n\n        // Detect window resizes (most browsers).\n        thisevent = $(window).on('resize', function() {\n            centerDialogue(dialogue);\n        });\n        listenevents.push(thisevent);\n\n        thisevent = container.on('key_up', function() {\n            checkOptions();\n        });\n        listenevents.push(thisevent);\n\n        // container.find('form').on('submit', function() {\n        //     // Prevent duplicate submissions on submit\n        //     submitbutton.attr('disabled', 'disabled');\n        //     options.attr('disabled', 'disabled');\n        //     cancelListenevents();\n        // });\n\n        // // Hook onto the cancel button to hide the form.\n        // thisevent = container.find('.addcancel').on('click', function(e) {\n        //     cancelPopup(e);\n        // });\n        // listenevents.push(thisevent);\n\n        // Hide will be managed by cancel_popup after restoring the body overflow.\n        thisevent = bb.one('button.closebutton').on('click', function(e) {\n            cancelPopup(e);\n        });\n        listenevents.push(thisevent);\n\n        // Grab global keyup events and handle them\n        thisevent = $(document).on('keydown', handleKeyPress, this);\n        listenevents.push(thisevent);\n\n        // // Add references to various elements we adjust\n        // submitbutton = container.find('.submitbutton');\n        //\n        // // Disable the submit element until the user makes a selection\n        // submitbutton.attr('disabled', 'true');\n\n        // // Ensure that the options are shown\n        // options.each(function() {\n        //     $(this).removeAttr('disabled');\n        // });\n\n        // Display the panel\n        panel.show(e);\n\n        // Re-centre the dialogue after we've shown it.\n        centerDialogue(dialogue);\n\n        // Finally, focus the first radio element - this enables form selection via the keyboard.\n        container.find('.option input[type=radio]').focus();\n\n        // // Trigger check_options to set the initial jumpurl.\n        // checkOptions();\n    };\n\n    return /** @alias module:core/activity_chooser_dialogue */{\n\n        /**\n         * Poll the server for any new notifications.\n         *\n         * @method fetchNotifications\n         */\n        setupChooserDialogue: setupChooserDialogue,\n\n        /**\n         * Add a notification to the page.\n         *\n         * Note: This does not cause the notification to be added to the session.\n         *\n         * @method addNotification\n         * @param {Object}  notification                The notification to add.\n         * @param {string}  notification.message        The body of the notification\n         * @param {string}  notification.type           The type of notification to add (error, warning, info, success).\n         * @param {Boolean} notification.closebutton    Whether to show the close button.\n         * @param {Boolean} notification.announce       Whether to announce to screen readers.\n         */\n        displayChooser: displayChooser,\n        updateHiddenRadioValue: updateHiddenRadioValue\n    };\n});\n"],"file":"activity_chooser_dialogue.min.js"}