{"version":3,"sources":["../../../src/local/activitychooser/dialogue.js"],"names":["showModuleHelp","carousel","moduleData","help","find","selectors","regions","innerHTML","spinnerPromise","transitionPromiseResolver","transitionPromise","Promise","resolve","contentPromise","Templates","renderForPromise","all","then","html","js","replaceNodeContents","querySelector","chooserSummary","description","focus","catch","Notification","exception","one","registerListenerEvents","modal","mappedModules","bodyClickListener","e","target","closest","actions","optionActions","showSummary","getBody","module","chooserOption","container","moduleName","dataset","modname","get","matches","closeOption","on","allModules","modules","caller","getModuleSelector","clearSearch","searchInput","search","value","toggleSearchResultsView","getBodyPromise","body","interval","pause","keyboard","addEventListener","activeSectionId","elements","activetab","getAttribute","sectionChooserOptions","getSectionChooserOptions","firstChooserOption","toggleFocusableChoserOption","initKeyboardNavigation","chooserOptionsContainer","chooserOptions","querySelectorAll","Array","from","forEach","element","keyCode","enter","space","preventDefault","arrowRight","currentOption","nextOption","nextElementSibling","firstOption","firstElementChild","toFocusOption","clickErrorHandler","focusChooserOption","arrowLeft","previousOption","previousElementSibling","lastOption","lastElementChild","home","end","currentChooserOption","previousChooserOption","isFocusable","chooserOptionLink","addChooser","chooserOptionHelp","tabIndex","item","fallback","renderSearchResults","searchResultsContainer","searchResultsData","searchResultsNumber","length","templateData","modalBody","searchQuery","searchActive","searchResults","searchModules","searchResultItemsContainer","searchResultItems","firstSearchResultItem","toggleSearchResultsContainer","toggleClearSearchButton","active","clearSearchutton","style","display","chooserContainer","chooser","setAttribute","removeAttribute","searchTerm","toLowerCase","activity","activityName","label","activityDesc","includes","push","disableFocusAllChooserOptions","allChooserOptions","displayChooser","origin","sectionModules","Map","set","modulename","getRoot","ModalEvents","hidden","destroy","shown","getModal","tab","activeSectionChooserOptions","prevActiveSectionId","relatedTarget","prevActiveSectionChooserOptions","show"],"mappings":"8TAwBA,OACA,OACA,OACA,O,4lCAYMA,CAAAA,CAAc,CAAG,SAACC,CAAD,CAAWC,CAAX,CAA0B,CAC7C,GAAMC,CAAAA,CAAI,CAAGF,CAAQ,CAACG,IAAT,CAAcC,UAAUC,OAAV,CAAkBH,IAAhC,EAAsC,CAAtC,CAAb,CACAA,CAAI,CAACI,SAAL,CAAiB,EAAjB,CAF6C,GAKvCC,CAAAA,CAAc,CAAG,yBAAmBL,CAAnB,CALsB,CAQzCM,CAAyB,CAAG,IARa,CASvCC,CAAiB,CAAG,GAAIC,CAAAA,OAAJ,CAAY,SAAAC,CAAO,CAAI,CAC7CH,CAAyB,CAAGG,CAC/B,CAFyB,CATmB,CAcvCC,CAAc,CAAGC,CAAS,CAACC,gBAAV,CAA2B,0BAA3B,CAAuDb,CAAvD,CAdsB,CAiB7CS,OAAO,CAACK,GAAR,CAAY,CAACH,CAAD,CAAiBL,CAAjB,CAAiCE,CAAjC,CAAZ,EACKO,IADL,CACU,gCAAGC,CAAH,GAAGA,IAAH,CAASC,CAAT,GAASA,EAAT,OAAkBL,CAAAA,CAAS,CAACM,mBAAV,CAA8BjB,CAA9B,CAAoCe,CAApC,CAA0CC,CAA1C,CAAlB,CADV,EAEKF,IAFL,CAEU,UAAM,CACRd,CAAI,CAACkB,aAAL,CAAmBhB,UAAUC,OAAV,CAAkBgB,cAAlB,CAAiCC,WAApD,EAAiEC,KAAjE,GACA,MAAOrB,CAAAA,CACV,CALL,EAMKsB,KANL,CAMWC,YAAY,CAACC,SANxB,EASA1B,CAAQ,CAAC2B,GAAT,CAAa,kBAAb,CAAiC,UAAM,CACnCnB,CAAyB,EAC5B,CAFD,EAIAR,CAAQ,CAACA,QAAT,CAAkB,MAAlB,CACH,C,CASK4B,CAAsB,CAAG,SAACC,CAAD,CAAQC,CAAR,CAA0B,CACrD,GAAMC,CAAAA,CAAiB,CAAG,SAAAC,CAAC,CAAI,CAC3B,GAAIA,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB9B,UAAU+B,OAAV,CAAkBC,aAAlB,CAAgCC,WAAjD,CAAJ,CAAmE,IACzDrC,CAAAA,CAAQ,CAAG,cAAE6B,CAAK,CAACS,OAAN,GAAgB,CAAhB,EAAmBlB,aAAnB,CAAiChB,UAAUC,OAAV,CAAkBL,QAAnD,CAAF,CAD8C,CAGzDuC,CAAM,CAAGP,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB9B,UAAUC,OAAV,CAAkBmC,aAAlB,CAAgCC,SAAjD,CAHgD,CAIzDC,CAAU,CAAGH,CAAM,CAACI,OAAP,CAAeC,OAJ6B,CAKzD3C,CAAU,CAAG6B,CAAa,CAACe,GAAd,CAAkBH,CAAlB,CAL4C,CAM/D3C,CAAc,CAACC,CAAD,CAAWC,CAAX,CACjB,CAGD,GAAI+B,CAAC,CAACC,MAAF,CAASa,OAAT,CAAiB1C,UAAU+B,OAAV,CAAkBY,WAAnC,CAAJ,CAAqD,CACjD,GAAM/C,CAAAA,CAAQ,CAAG,cAAE6B,CAAK,CAACS,OAAN,GAAgB,CAAhB,EAAmBlB,aAAnB,CAAiChB,UAAUC,OAAV,CAAkBL,QAAnD,CAAF,CAAjB,CAGAA,CAAQ,CAACA,QAAT,CAAkB,MAAlB,EACAA,CAAQ,CAACgD,EAAT,CAAY,kBAAZ,CAAgC,UAAM,IAC5BC,CAAAA,CAAU,CAAGpB,CAAK,CAACS,OAAN,GAAgB,CAAhB,EAAmBlB,aAAnB,CAAiChB,UAAUC,OAAV,CAAkB6C,OAAnD,CADe,CAE5BC,CAAM,CAAGF,CAAU,CAAC7B,aAAX,CAAyBhB,UAAUC,OAAV,CAAkB+C,iBAAlB,CAAoCpB,CAAC,CAACC,MAAF,CAASU,OAAT,CAAiBC,OAArD,CAAzB,CAFmB,CAGlCO,CAAM,CAAC5B,KAAP,EACH,CAJD,CAKH,CAGD,GAAIS,CAAC,CAACC,MAAF,CAASa,OAAT,CAAiB1C,UAAU+B,OAAV,CAAkBkB,WAAnC,CAAJ,CAAqD,CAEjD,GAAMC,CAAAA,CAAW,CAAGzB,CAAK,CAACS,OAAN,GAAgB,CAAhB,EAAmBlB,aAAnB,CAAiChB,UAAU+B,OAAV,CAAkBoB,MAAnD,CAApB,CACAD,CAAW,CAACE,KAAZ,CAAoB,EAApB,CACAF,CAAW,CAAC/B,KAAZ,GACAkC,CAAuB,CAAC5B,CAAK,CAACS,OAAN,GAAgB,CAAhB,CAAD,CAAqBR,CAArB,CAAoCwB,CAAW,CAACE,KAAhD,CAC1B,CACJ,CA/BD,CAiCA3B,CAAK,CAAC6B,cAAN,GAGC1C,IAHD,CAGM,SAAA2C,CAAI,QAAIA,CAAAA,CAAI,CAAC,CAAD,CAAR,CAHV,EAMC3C,IAND,CAMM,SAAA2C,CAAI,CAAI,CACV,cAAEA,CAAI,CAACvC,aAAL,CAAmBhB,UAAUC,OAAV,CAAkBL,QAArC,CAAF,EACKA,QADL,CACc,CACN4D,QAAQ,GADF,CAENC,KAAK,GAFC,CAGNC,QAAQ,GAHF,CADd,EAOA,MAAOH,CAAAA,CACV,CAfD,EAkBC3C,IAlBD,CAkBM,SAAA2C,CAAI,CAAI,CACVA,CAAI,CAACI,gBAAL,CAAsB,OAAtB,CAA+BhC,CAA/B,EACA,MAAO4B,CAAAA,CACV,CArBD,EAwBC3C,IAxBD,CAwBM,SAAA2C,CAAI,CAAI,CACV,GAAML,CAAAA,CAAW,CAAGK,CAAI,CAACvC,aAAL,CAAmBhB,UAAU+B,OAAV,CAAkBoB,MAArC,CAApB,CAEAD,CAAW,CAACS,gBAAZ,CAA6B,OAA7B,CAAsC,eAAS,UAAM,CAEjDN,CAAuB,CAACE,CAAD,CAAO7B,CAAP,CAAsBwB,CAAW,CAACE,KAAlC,CAC1B,CAHqC,CAGnC,GAHmC,CAAtC,EAIA,MAAOG,CAAAA,CACV,CAhCD,EAmCC3C,IAnCD,CAmCM,SAAA2C,CAAI,CAAI,IAEJK,CAAAA,CAAe,CAAGL,CAAI,CAACvC,aAAL,CAAmBhB,UAAU6D,QAAV,CAAmBC,SAAtC,EAAiDC,YAAjD,CAA8D,MAA9D,CAFd,CAGJC,CAAqB,CAAGT,CAAI,CAACvC,aAAL,CAAmBhB,UAAUC,OAAV,CAAkBgE,wBAAlB,CAA2CL,CAA3C,CAAnB,CAHpB,CAIJM,CAAkB,CAAGF,CAAqB,CAAChD,aAAtB,CAAoChB,UAAUC,OAAV,CAAkBmC,aAAlB,CAAgCC,SAApE,CAJjB,CAKV8B,CAA2B,CAACD,CAAD,IAA3B,CACAE,CAAsB,CAACb,CAAD,CAAO7B,CAAP,CAAsBsC,CAAtB,CAAtB,CACA,MAAOT,CAAAA,CACV,CA3CD,EA4CCnC,KA5CD,EA8CH,C,CAUKgD,CAAsB,CAAG,SAACb,CAAD,CAAO7B,CAAP,CAAsB2C,CAAtB,CAAkD,CAE7E,GAAMC,CAAAA,CAAc,CAAGD,CAAuB,CAACE,gBAAxB,CAAyCvE,UAAUC,OAAV,CAAkBmC,aAAlB,CAAgCC,SAAzE,CAAvB,CAEAmC,KAAK,CAACC,IAAN,CAAWH,CAAX,EAA2BI,OAA3B,CAAmC,SAACC,CAAD,CAAa,CAC5C,MAAOA,CAAAA,CAAO,CAAChB,gBAAR,CAAyB,OAAzB,CAAkC,SAAC/B,CAAD,CAAO,CAG5C,GAAIA,CAAC,CAACgD,OAAF,GAAcC,OAAd,EAAuBjD,CAAC,CAACgD,OAAF,GAAcE,OAAzC,CAAgD,CAC5C,GAAIlD,CAAC,CAACC,MAAF,CAASa,OAAT,CAAiB1C,UAAU+B,OAAV,CAAkBC,aAAlB,CAAgCC,WAAjD,CAAJ,CAAmE,CAC/DL,CAAC,CAACmD,cAAF,GAD+D,GAEzD5C,CAAAA,CAAM,CAAGP,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB9B,UAAUC,OAAV,CAAkBmC,aAAlB,CAAgCC,SAAjD,CAFgD,CAGzDC,CAAU,CAAGH,CAAM,CAACI,OAAP,CAAeC,OAH6B,CAIzD3C,CAAU,CAAG6B,CAAa,CAACe,GAAd,CAAkBH,CAAlB,CAJ4C,CAKzD1C,CAAQ,CAAG,cAAE2D,CAAI,CAACvC,aAAL,CAAmBhB,UAAUC,OAAV,CAAkBL,QAArC,CAAF,CAL8C,CAM/DA,CAAQ,CAACA,QAAT,CAAkB,CACd4D,QAAQ,GADM,CAEdC,KAAK,GAFS,CAGdC,QAAQ,GAHM,CAAlB,EAKA/D,CAAc,CAACC,CAAD,CAAWC,CAAX,CACjB,CACJ,CAGD,GAAI+B,CAAC,CAACgD,OAAF,GAAcI,YAAlB,CAA8B,CAC1BpD,CAAC,CAACmD,cAAF,GAD0B,GAEpBE,CAAAA,CAAa,CAAGrD,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB9B,UAAUC,OAAV,CAAkBmC,aAAlB,CAAgCC,SAAjD,CAFI,CAGpB6C,CAAU,CAAGD,CAAa,CAACE,kBAHP,CAIpBC,CAAW,CAAGf,CAAuB,CAACgB,iBAJlB,CAKpBC,CAAa,CAAGC,CAAiB,CAACL,CAAD,CAAaE,CAAb,CALb,CAM1BI,CAAkB,CAACF,CAAD,CAAgBL,CAAhB,CACrB,CAGD,GAAIrD,CAAC,CAACgD,OAAF,GAAca,WAAlB,CAA6B,CACzB7D,CAAC,CAACmD,cAAF,GADyB,GAEnBE,CAAAA,CAAa,CAAGrD,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB9B,UAAUC,OAAV,CAAkBmC,aAAlB,CAAgCC,SAAjD,CAFG,CAGnBqD,CAAc,CAAGT,CAAa,CAACU,sBAHZ,CAInBC,CAAU,CAAGvB,CAAuB,CAACwB,gBAJlB,CAKnBP,CAAa,CAAGC,CAAiB,CAACG,CAAD,CAAiBE,CAAjB,CALd,CAMzBJ,CAAkB,CAACF,CAAD,CAAgBL,CAAhB,CACrB,CAED,GAAIrD,CAAC,CAACgD,OAAF,GAAckB,MAAlB,CAAwB,CACpBlE,CAAC,CAACmD,cAAF,GADoB,GAEdE,CAAAA,CAAa,CAAGrD,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB9B,UAAUC,OAAV,CAAkBmC,aAAlB,CAAgCC,SAAjD,CAFF,CAGd+C,CAAW,CAAGf,CAAuB,CAACgB,iBAHxB,CAIpBG,CAAkB,CAACJ,CAAD,CAAcH,CAAd,CACrB,CAED,GAAIrD,CAAC,CAACgD,OAAF,GAAcmB,KAAlB,CAAuB,CACnBnE,CAAC,CAACmD,cAAF,GADmB,GAEbE,CAAAA,CAAa,CAAGrD,CAAC,CAACC,MAAF,CAASC,OAAT,CAAiB9B,UAAUC,OAAV,CAAkBmC,aAAlB,CAAgCC,SAAjD,CAFH,CAGbuD,CAAU,CAAGvB,CAAuB,CAACwB,gBAHxB,CAInBL,CAAkB,CAACI,CAAD,CAAaX,CAAb,CACrB,CACJ,CApDM,CAqDV,CAtDD,CAuDH,C,CASKO,CAAkB,CAAG,SAACQ,CAAD,CAAyD,IAAlCC,CAAAA,CAAkC,2DAChF,GAAI,KAAAA,CAAJ,CAAqC,CACjC9B,CAA2B,CAAC8B,CAAD,IAC9B,CAED9B,CAA2B,CAAC6B,CAAD,IAA3B,CACAA,CAAoB,CAAC7E,KAArB,EACH,C,CASKgD,CAA2B,CAAG,SAAC/B,CAAD,CAAgB8D,CAAhB,CAAgC,IAC1DC,CAAAA,CAAiB,CAAG/D,CAAa,CAACpB,aAAd,CAA4BhB,UAAU+B,OAAV,CAAkBqE,UAA9C,CADsC,CAE1DC,CAAiB,CAAGjE,CAAa,CAACpB,aAAd,CAA4BhB,UAAU+B,OAAV,CAAkBC,aAAlB,CAAgCC,WAA5D,CAFsC,CAIhE,GAAIiE,CAAJ,CAAiB,CAEb9D,CAAa,CAACkE,QAAd,CAAyB,CAAzB,CACAH,CAAiB,CAACG,QAAlB,CAA6B,CAA7B,CACAD,CAAiB,CAACC,QAAlB,CAA6B,CAChC,CALD,IAKO,CAEHlE,CAAa,CAACkE,QAAd,CAAyB,CAAC,CAA1B,CACAH,CAAiB,CAACG,QAAlB,CAA6B,CAAC,CAA9B,CACAD,CAAiB,CAACC,QAAlB,CAA6B,CAAC,CACjC,CACJ,C,CAUKf,CAAiB,CAAG,SAACgB,CAAD,CAAOC,CAAP,CAAoB,CAC1C,GAAa,IAAT,GAAAD,CAAJ,CAAmB,CACf,MAAOA,CAAAA,CACV,CAFD,IAEO,CACH,MAAOC,CAAAA,CACV,CACJ,C,CASKC,CAAmB,4CAAG,WAAMC,CAAN,CAA8BC,CAA9B,iGAClBC,CADkB,CACID,CAAiB,CAACE,MADtB,CAElBC,CAFkB,CAEH,CACjB,oBAAuBF,CADN,CAEjB,cAAiBD,CAFA,CAFG,gBAOClG,CAAAA,CAAS,CAACC,gBAAV,CAA2B,oCAA3B,CAAiEoG,CAAjE,CAPD,iBAOjBjG,CAPiB,GAOjBA,IAPiB,CAOXC,CAPW,GAOXA,EAPW,gBAQlBL,CAAAA,CAAS,CAACM,mBAAV,CAA8B2F,CAA9B,CAAsD7F,CAAtD,CAA4DC,CAA5D,CARkB,yCAAH,uD,CAmBnBuC,CAAuB,4CAAG,WAAM0D,CAAN,CAAiBrF,CAAjB,CAAgCsF,CAAhC,iGACtBC,CADsB,CACc,CAArB,CAAAD,CAAW,CAACH,MADL,CAEtBH,CAFsB,CAEGK,CAAS,CAAC/F,aAAV,CAAwBhB,UAAUC,OAAV,CAAkBiH,aAA1C,CAFH,KAIxBD,CAJwB,iBAKlBN,CALkB,CAKEQ,CAAa,CAACzF,CAAD,CAAgBsF,CAAhB,CALf,gBAMlBP,CAAAA,CAAmB,CAACC,CAAD,CAAyBC,CAAzB,CAND,QAOlBS,CAPkB,CAOWV,CAAsB,CAAC1F,aAAvB,CAAqChB,UAAUC,OAAV,CAAkBoH,iBAAvD,CAPX,CAQlBC,CARkB,CAQMF,CAA0B,CAACpG,aAA3B,CAAyChB,UAAUC,OAAV,CAAkBmC,aAAlB,CAAgCC,SAAzE,CARN,CASxB,GAAIiF,CAAJ,CAA2B,CAEvBnD,CAA2B,CAACmD,CAAD,IAA3B,CAEAlD,CAAsB,CAAC2C,CAAD,CAAYrF,CAAZ,CAA2B0F,CAA3B,CACzB,CAduB,OAiB5BG,CAA4B,CAACR,CAAD,CAAYE,CAAZ,CAA5B,CACAO,CAAuB,CAACT,CAAD,CAAYE,CAAZ,CAAvB,CAlB4B,yCAAH,uD,CA4BvBO,CAAuB,CAAG,SAACT,CAAD,CAAYU,CAAZ,CAAuB,CACnD,GAAMC,CAAAA,CAAgB,CAAGX,CAAS,CAAC/F,aAAV,CAAwBhB,UAAU+B,OAAV,CAAkBkB,WAA1C,CAAzB,CACA,GAAIwE,CAAJ,CAAY,CACRC,CAAgB,CAACC,KAAjB,CAAuBC,OAAvB,CAAiC,OACpC,CAFD,IAEO,CACHF,CAAgB,CAACC,KAAjB,CAAuBC,OAAvB,CAAiC,MACpC,CACJ,C,CASKL,CAA4B,CAAG,SAACR,CAAD,CAAYU,CAAZ,CAAuB,IAClDf,CAAAA,CAAsB,CAAGK,CAAS,CAAC/F,aAAV,CAAwBhB,UAAUC,OAAV,CAAkBiH,aAA1C,CADyB,CAElDW,CAAgB,CAAGd,CAAS,CAAC/F,aAAV,CAAwBhB,UAAUC,OAAV,CAAkB6H,OAA1C,CAF+B,CAIxD,GAAIL,CAAJ,CAAY,CACRI,CAAgB,CAACE,YAAjB,CAA8B,QAA9B,CAAwC,QAAxC,EACArB,CAAsB,CAACsB,eAAvB,CAAuC,QAAvC,CACH,CAHD,IAGO,CACHtB,CAAsB,CAACqB,YAAvB,CAAoC,QAApC,CAA8C,QAA9C,EACAF,CAAgB,CAACG,eAAjB,CAAiC,QAAjC,CACH,CACJ,C,CAUKb,CAAa,CAAG,SAACrE,CAAD,CAAUmF,CAAV,CAAyB,CAC3C,GAAmB,EAAf,GAAAA,CAAJ,CAAuB,CACnB,MAAOnF,CAAAA,CACV,CAEDmF,CAAU,CAAGA,CAAU,CAACC,WAAX,EAAb,CAEA,GAAMhB,CAAAA,CAAa,CAAG,EAAtB,CAEApE,CAAO,CAAC4B,OAAR,CAAgB,SAACyD,CAAD,CAAc,IACpBC,CAAAA,CAAY,CAAGD,CAAQ,CAACE,KAAT,CAAeH,WAAf,EADK,CAEpBI,CAAY,CAAGH,CAAQ,CAACjH,WAAT,CAAqBgH,WAArB,EAFK,CAG1B,GAAIE,CAAY,CAACG,QAAb,CAAsBN,CAAtB,GAAqCK,CAAY,CAACC,QAAb,CAAsBN,CAAtB,CAAzC,CAA4E,CACxEf,CAAa,CAACsB,IAAd,CAAmBL,CAAnB,CACH,CACJ,CAND,EAQA,MAAOjB,CAAAA,CACV,C,CAEKuB,CAA6B,CAAG,SAACzE,CAAD,CAA2B,CAC7D,GAAM0E,CAAAA,CAAiB,CAAG1E,CAAqB,CAACO,gBAAtB,CAAuCvE,UAAUC,OAAV,CAAkBmC,aAAlB,CAAgCC,SAAvE,CAA1B,CACAqG,CAAiB,CAAChE,OAAlB,CAA0B,SAACtC,CAAD,CAAmB,CACzC+B,CAA2B,CAAC/B,CAAD,IAC9B,CAFD,CAGH,C,CAUYuG,CAAc,CAAG,SAACC,CAAD,CAASnH,CAAT,CAAgBoH,CAAhB,CAAmC,CAG7D,GAAMnH,CAAAA,CAAa,CAAG,GAAIoH,CAAAA,GAA1B,CACAD,CAAc,CAACnE,OAAf,CAAuB,SAACvC,CAAD,CAAY,CAC/BT,CAAa,CAACqH,GAAd,CAAkB5G,CAAM,CAAC6G,UAAzB,CAAqC7G,CAArC,CACH,CAFD,EAKAX,CAAsB,CAACC,CAAD,CAAQC,CAAR,CAAtB,CAGAD,CAAK,CAACwH,OAAN,GAAgBrG,EAAhB,CAAmBsG,CAAW,CAACC,MAA/B,CAAuC,UAAM,CACzC1H,CAAK,CAAC2H,OAAN,EACH,CAFD,EAKA3H,CAAK,CAACwH,OAAN,GAAgBrG,EAAhB,CAAmBsG,CAAW,CAACG,KAA/B,CAAsC,UAAM,CACxC5H,CAAK,CAAC6H,QAAN,GAAiB,CAAjB,EAAoBhD,QAApB,CAA+B,CAAC,CAAhC,CAEA7E,CAAK,CAAC6B,cAAN,GACC1C,IADD,CACM,SAAA2C,CAAI,CAAI,CAEV,cAAEvD,UAAU6D,QAAV,CAAmB0F,GAArB,EAA0B3G,EAA1B,CAA6B,cAA7B,CAA6C,SAAUhB,CAAV,CAAa,IAChDgC,CAAAA,CAAe,CAAGhC,CAAC,CAACC,MAAF,CAASkC,YAAT,CAAsB,MAAtB,CAD8B,CAEhDyF,CAA2B,CAAGjG,CAAI,CAAC,CAAD,CAAJ,CAC/BvC,aAD+B,CACjBhB,UAAUC,OAAV,CAAkBgE,wBAAlB,CAA2CL,CAA3C,CADiB,CAFkB,CAIhDM,CAAkB,CAAGsF,CAA2B,CACjDxI,aADsB,CACRhB,UAAUC,OAAV,CAAkBmC,aAAlB,CAAgCC,SADxB,CAJ2B,CAMhDoH,CAAmB,CAAG7H,CAAC,CAAC8H,aAAF,CAAgB3F,YAAhB,CAA6B,MAA7B,CAN0B,CAOhD4F,CAA+B,CAAGpG,CAAI,CAAC,CAAD,CAAJ,CACnCvC,aADmC,CACrBhB,UAAUC,OAAV,CAAkBgE,wBAAlB,CAA2CwF,CAA3C,CADqB,CAPc,CAWtDhB,CAA6B,CAACkB,CAAD,CAA7B,CAEAxF,CAA2B,CAACD,CAAD,IAA3B,CACAE,CAAsB,CAACb,CAAD,CAAO7B,CAAP,CAAsB8H,CAAtB,CAEzB,CAhBD,CAiBH,CApBD,EAqBCpI,KArBD,CAqBOC,YAAY,CAACC,SArBpB,CAsBH,CAzBD,EA2BAG,CAAK,CAACmI,IAAN,EACH,C","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A type of dialogue used as for choosing options.\n *\n * @module     core_course/local/chooser/dialogue\n * @package    core\n * @copyright  2019 Mihail Geshoski <mihail@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as ModalEvents from 'core/modal_events';\nimport selectors from 'core_course/local/activitychooser/selectors';\nimport * as Templates from 'core/templates';\nimport {end, arrowLeft, arrowRight, home, enter, space} from 'core/key_codes';\nimport {addIconToContainer} from 'core/loadingicon';\nimport {debounce} from 'core/utils';\n\n/**\n * Given an event from the main module 'page' navigate to it's help section via a carousel.\n *\n * @method showModuleHelp\n * @param {jQuery} carousel Our initialized carousel to manipulate\n * @param {Object} moduleData Data of the Fmodule to carousel to\n */\nconst showModuleHelp = (carousel, moduleData) => {\n    const help = carousel.find(selectors.regions.help)[0];\n    help.innerHTML = '';\n\n    // Add a spinner.\n    const spinnerPromise = addIconToContainer(help);\n\n    // Used later...\n    let transitionPromiseResolver = null;\n    const transitionPromise = new Promise(resolve => {\n        transitionPromiseResolver = resolve;\n    });\n\n    // Build up the html & js ready to place into the help section.\n    const contentPromise = Templates.renderForPromise('core_course/chooser_help', moduleData);\n\n    // Wait for the content to be ready, and for the transition to be complet.\n    Promise.all([contentPromise, spinnerPromise, transitionPromise])\n        .then(([{html, js}]) => Templates.replaceNodeContents(help, html, js))\n        .then(() => {\n            help.querySelector(selectors.regions.chooserSummary.description).focus();\n            return help;\n        })\n        .catch(Notification.exception);\n\n    // Move to the next slide, and resolve the transition promise when it's done.\n    carousel.one('slid.bs.carousel', () => {\n        transitionPromiseResolver();\n    });\n    // Trigger the transition between 'pages'.\n    carousel.carousel('next');\n};\n\n/**\n * Register chooser related event listeners.\n *\n * @method registerListenerEvents\n * @param {Promise} modal Our modal that we are working with\n * @param {Map} mappedModules A map of all of the modules we are working with with K: mod_name V: {Object}\n */\nconst registerListenerEvents = (modal, mappedModules) => {\n    const bodyClickListener = e => {\n        if (e.target.closest(selectors.actions.optionActions.showSummary)) {\n            const carousel = $(modal.getBody()[0].querySelector(selectors.regions.carousel));\n\n            const module = e.target.closest(selectors.regions.chooserOption.container);\n            const moduleName = module.dataset.modname;\n            const moduleData = mappedModules.get(moduleName);\n            showModuleHelp(carousel, moduleData);\n        }\n\n        // From the help screen go back to the module overview.\n        if (e.target.matches(selectors.actions.closeOption)) {\n            const carousel = $(modal.getBody()[0].querySelector(selectors.regions.carousel));\n\n            // Trigger the transition between 'pages'.\n            carousel.carousel('prev');\n            carousel.on('slid.bs.carousel', () => {\n                const allModules = modal.getBody()[0].querySelector(selectors.regions.modules);\n                const caller = allModules.querySelector(selectors.regions.getModuleSelector(e.target.dataset.modname));\n                caller.focus();\n            });\n        }\n\n        // The \"clear search\" button is triggered.\n        if (e.target.matches(selectors.actions.clearSearch)) {\n            // Clear the entered search query in the search bar and hide the search results container.\n            const searchInput = modal.getBody()[0].querySelector(selectors.actions.search);\n            searchInput.value = \"\";\n            searchInput.focus();\n            toggleSearchResultsView(modal.getBody()[0], mappedModules, searchInput.value);\n        }\n    };\n\n    modal.getBodyPromise()\n\n    // The return value of getBodyPromise is a jquery object containing the body NodeElement.\n    .then(body => body[0])\n\n    // Set up the carousel.\n    .then(body => {\n        $(body.querySelector(selectors.regions.carousel))\n            .carousel({\n                interval: false,\n                pause: true,\n                keyboard: false\n            });\n\n        return body;\n    })\n\n    // Add the listener for clicks on the body.\n    .then(body => {\n        body.addEventListener('click', bodyClickListener);\n        return body;\n    })\n\n    // Add the listener for clicks on the body.\n    .then(body => {\n        const searchInput = body.querySelector(selectors.actions.search);\n        // The search input is triggered.\n        searchInput.addEventListener('input', debounce(() => {\n            // Display the search results.\n            toggleSearchResultsView(body, mappedModules, searchInput.value);\n        }, 300));\n        return body;\n    })\n\n    // Register event listeners related to the keyboard navigation controls.\n    .then(body => {\n        // Get the active chooser options section.\n        const activeSectionId = body.querySelector(selectors.elements.activetab).getAttribute(\"href\");\n        const sectionChooserOptions = body.querySelector(selectors.regions.getSectionChooserOptions(activeSectionId));\n        const firstChooserOption = sectionChooserOptions.querySelector(selectors.regions.chooserOption.container);\n        toggleFocusableChoserOption(firstChooserOption, true);\n        initKeyboardNavigation(body, mappedModules, sectionChooserOptions);\n        return body;\n    })\n    .catch();\n\n};\n\n/**\n * Initialise the keyboard navigation controls for the chooser.\n *\n * @method initKeyboardNavigation\n * @param {NodeElement} body Our modal that we are working with\n * @param {Map} mappedModules A map of all of the modules we are working with with K: mod_name V: {Object}\n * @param {HTMLElement} chooserOptionsContainer The section that contains the chooser items\n */\nconst initKeyboardNavigation = (body, mappedModules, chooserOptionsContainer) => {\n\n    const chooserOptions = chooserOptionsContainer.querySelectorAll(selectors.regions.chooserOption.container);\n\n    Array.from(chooserOptions).forEach((element) => {\n        return element.addEventListener('keyup', (e) => {\n\n            // Check for enter/ space triggers for showing the help.\n            if (e.keyCode === enter || e.keyCode === space) {\n                if (e.target.matches(selectors.actions.optionActions.showSummary)) {\n                    e.preventDefault();\n                    const module = e.target.closest(selectors.regions.chooserOption.container);\n                    const moduleName = module.dataset.modname;\n                    const moduleData = mappedModules.get(moduleName);\n                    const carousel = $(body.querySelector(selectors.regions.carousel));\n                    carousel.carousel({\n                        interval: false,\n                        pause: true,\n                        keyboard: false\n                    });\n                    showModuleHelp(carousel, moduleData);\n                }\n            }\n\n            // Next.\n            if (e.keyCode === arrowRight) {\n                e.preventDefault();\n                const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                const nextOption = currentOption.nextElementSibling;\n                const firstOption = chooserOptionsContainer.firstElementChild;\n                const toFocusOption = clickErrorHandler(nextOption, firstOption);\n                focusChooserOption(toFocusOption, currentOption);\n            }\n\n            // Previous.\n            if (e.keyCode === arrowLeft) {\n                e.preventDefault();\n                const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                const previousOption = currentOption.previousElementSibling;\n                const lastOption = chooserOptionsContainer.lastElementChild;\n                const toFocusOption = clickErrorHandler(previousOption, lastOption);\n                focusChooserOption(toFocusOption, currentOption);\n            }\n\n            if (e.keyCode === home) {\n                e.preventDefault();\n                const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                const firstOption = chooserOptionsContainer.firstElementChild;\n                focusChooserOption(firstOption, currentOption);\n            }\n\n            if (e.keyCode === end) {\n                e.preventDefault();\n                const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                const lastOption = chooserOptionsContainer.lastElementChild;\n                focusChooserOption(lastOption, currentOption);\n            }\n        });\n    });\n};\n\n/**\n * Focus on a chooser option element and remove the previous chooser element from the focus order\n *\n * @method focusChooserOption\n * @param {HTMLElement} currentChooserOption The current chooser option element that we want to focus\n * @param {HTMLElement} previousChooserOption The previous focused option element\n */\nconst focusChooserOption = (currentChooserOption, previousChooserOption = false) => {\n    if (previousChooserOption !== false) {\n        toggleFocusableChoserOption(previousChooserOption, false);\n    }\n\n    toggleFocusableChoserOption(currentChooserOption, true);\n    currentChooserOption.focus();\n};\n\n/**\n * Add or remove a chooser option from the focus order.\n *\n * @method focusChooserOption\n * @param {HTMLElement} chooserOption The chooser option element which should be added or removed from the focus order\n * @param {Boolean} isFocusable Whether the chooser element is focusable or not\n */\nconst toggleFocusableChoserOption = (chooserOption, isFocusable) => {\n    const chooserOptionLink = chooserOption.querySelector(selectors.actions.addChooser);\n    const chooserOptionHelp = chooserOption.querySelector(selectors.actions.optionActions.showSummary);\n\n    if (isFocusable) {\n        // Set tabindex to 0 to add current chooser option element to the focus order.\n        chooserOption.tabIndex = 0;\n        chooserOptionLink.tabIndex = 0;\n        chooserOptionHelp.tabIndex = 0;\n    } else {\n        // Set tabindex to -1 to remove the previous chooser option element from the focus order.\n        chooserOption.tabIndex = -1;\n        chooserOptionLink.tabIndex = -1;\n        chooserOptionHelp.tabIndex = -1;\n    }\n};\n\n/**\n * Small error handling function to make sure the navigated to object exists\n *\n * @method clickErrorHandler\n * @param {HTMLElement} item What we want to check exists\n * @param {HTMLElement} fallback If we dont match anything fallback the focus\n * @return {String}\n */\nconst clickErrorHandler = (item, fallback) => {\n    if (item !== null) {\n        return item;\n    } else {\n        return fallback;\n    }\n};\n\n/**\n * Render the search results in a defined container\n *\n * @method renderSearchResults\n * @param {HTMLElement} searchResultsContainer The container where the data should be rendered\n * @param {Object} searchResultsData Data containing the module items that satisfy the search criteria\n */\nconst renderSearchResults = async(searchResultsContainer, searchResultsData) => {\n    const searchResultsNumber = searchResultsData.length;\n    const templateData = {\n        'searchresultsnumber': searchResultsNumber,\n        'searchresults': searchResultsData\n    };\n    // Build up the html & js ready to place into the help section.\n    const {html, js} = await Templates.renderForPromise('core_course/chooser_search_results', templateData);\n    await Templates.replaceNodeContents(searchResultsContainer, html, js);\n};\n\n/**\n * Toggle (display/hide) the search results depending on the value of the search query\n *\n * @method toggleSearchResultsView\n * @param {NodeElement} modalBody The body of the created modal for the section\n * @param {Map} mappedModules A map of all of the modules we are working with with K: mod_name V: {Object}\n * @param {String} searchQuery The search query\n */\nconst toggleSearchResultsView = async(modalBody, mappedModules, searchQuery) => {\n    const searchActive = searchQuery.length > 0;\n    const searchResultsContainer = modalBody.querySelector(selectors.regions.searchResults);\n\n    if (searchActive) {\n        const searchResultsData = searchModules(mappedModules, searchQuery);\n        await renderSearchResults(searchResultsContainer, searchResultsData);\n        const searchResultItemsContainer = searchResultsContainer.querySelector(selectors.regions.searchResultItems);\n        const firstSearchResultItem = searchResultItemsContainer.querySelector(selectors.regions.chooserOption.container);\n        if (firstSearchResultItem) {\n            // Set the first result item to be focusable.\n            toggleFocusableChoserOption(firstSearchResultItem, true);\n            // Register keyboard events on the created search result items.\n            initKeyboardNavigation(modalBody, mappedModules, searchResultItemsContainer);\n        }\n    }\n\n    toggleSearchResultsContainer(modalBody, searchActive);\n    toggleClearSearchButton(modalBody, searchActive);\n};\n\n/**\n * Toggle (display/hide) the \"clear search\" button in the activity chooser search bar\n *\n * @method toggleClearSearchButton\n * @param {NodeElement} modalBody The body of the created modal for the section\n * @param {Boolean} active Whether the search mode is activated\n */\nconst toggleClearSearchButton = (modalBody, active) => {\n    const clearSearchutton = modalBody.querySelector(selectors.actions.clearSearch);\n    if (active) {\n        clearSearchutton.style.display = \"block\";\n    } else {\n        clearSearchutton.style.display = \"none\";\n    }\n};\n\n/**\n * Toggle (display/hide) the search results container\n *\n * @method toggleSearchResultsContainer\n * @param {NodeElement} modalBody The body of the created modal for the section\n * @param {Boolean} active Whether the search mode is activated\n */\nconst toggleSearchResultsContainer = (modalBody, active) => {\n    const searchResultsContainer = modalBody.querySelector(selectors.regions.searchResults);\n    const chooserContainer = modalBody.querySelector(selectors.regions.chooser);\n\n    if (active) {\n        chooserContainer.setAttribute('hidden', 'hidden');\n        searchResultsContainer.removeAttribute('hidden');\n    } else {\n        searchResultsContainer.setAttribute('hidden', 'hidden');\n        chooserContainer.removeAttribute('hidden');\n    }\n};\n\n/**\n * Return the list of modules which have a name or description that matches the given search term.\n *\n * @method searchModules\n * @param {Array} modules List of available modules\n * @param {String} searchTerm The search term to match\n * @return {Array}\n */\nconst searchModules = (modules, searchTerm) => {\n    if (searchTerm === '') {\n        return modules;\n    }\n\n    searchTerm = searchTerm.toLowerCase();\n\n    const searchResults = [];\n\n    modules.forEach((activity) => {\n        const activityName = activity.label.toLowerCase();\n        const activityDesc = activity.description.toLowerCase();\n        if (activityName.includes(searchTerm) || activityDesc.includes(searchTerm)) {\n            searchResults.push(activity);\n        }\n    });\n\n    return searchResults;\n};\n\nconst disableFocusAllChooserOptions = (sectionChooserOptions) => {\n    const allChooserOptions = sectionChooserOptions.querySelectorAll(selectors.regions.chooserOption.container);\n    allChooserOptions.forEach((chooserOption) => {\n        toggleFocusableChoserOption(chooserOption, false);\n    });\n};\n\n/**\n * Display the module chooser.\n *\n * @method displayChooser\n * @param {HTMLElement} origin The calling button\n * @param {Object} modal Our created modal for the section\n * @param {Array} sectionModules An array of all of the built module information\n */\nexport const displayChooser = (origin, modal, sectionModules) => {\n\n    // Make a map so we can quickly fetch a specific module's object for either rendering or searching.\n    const mappedModules = new Map();\n    sectionModules.forEach((module) => {\n        mappedModules.set(module.modulename, module);\n    });\n\n    // Register event listeners.\n    registerListenerEvents(modal, mappedModules);\n\n    // We want to focus on the action select when the dialog is closed.\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        modal.destroy();\n    });\n\n    // We want to focus on the first chooser option element as soon as the modal is opened.\n    modal.getRoot().on(ModalEvents.shown, () => {\n        modal.getModal()[0].tabIndex = -1;\n\n        modal.getBodyPromise()\n        .then(body => {\n\n            $(selectors.elements.tab).on('shown.bs.tab', function (e) {\n                const activeSectionId = e.target.getAttribute(\"href\"); // activated tab.\n                const activeSectionChooserOptions = body[0]\n                    .querySelector(selectors.regions.getSectionChooserOptions(activeSectionId));\n                const firstChooserOption = activeSectionChooserOptions\n                    .querySelector(selectors.regions.chooserOption.container);\n                const prevActiveSectionId = e.relatedTarget.getAttribute(\"href\");\n                const prevActiveSectionChooserOptions = body[0]\n                    .querySelector(selectors.regions.getSectionChooserOptions(prevActiveSectionId));\n\n                // Disable the focus of every chooser option in the previous active section.\n                disableFocusAllChooserOptions(prevActiveSectionChooserOptions);\n                // Enable the focus of the first chooser option in the current active section.\n                toggleFocusableChoserOption(firstChooserOption, true);\n                initKeyboardNavigation(body, mappedModules, activeSectionChooserOptions);\n                return;\n            });\n        })\n        .catch(Notification.exception);\n    });\n\n    modal.show();\n};\n"],"file":"dialogue.min.js"}