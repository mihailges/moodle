{"version":3,"sources":["../../../src/local/grades/grader.js"],"names":["templateNames","grader","app","gradingPanel","error","searchResults","status","displayUserPicker","root","html","pickerRegion","querySelector","Selectors","regions","Templates","replaceNodeContents","fetchContentFromRender","js","getUpdateUserContentFunction","getContentForUser","getGradeForUser","saveGradeForUser","firstLoad","user","spinner","Promise","all","id","then","userGrade","moduleReplace","render","templatename","grade","gradingPanelHtml","gradingPanelJS","panelContainer","gradingPanelContainer","panel","form","addEventListener","event","preventDefault","scrollTop","resolve","showSearchResultContainer","bodyContainer","userPickerContainer","searchResultsContainer","classList","add","remove","hideSearchResultContainer","showUserSearchInput","toggleSearchButton","searchContainer","searchInput","setAttribute","focus","hideUserSearchInput","value","searchForUsers","userList","searchTerm","toLowerCase","filter","fullname","includes","firstRadioButton","node","nodeLabel","parentElement","firstNodeLabel","parentNode","firstElementChild","first","children","nodeType","Node","ELEMENT_NODE","getAttribute","nextElementSibling","lastRadioButton","lastNodeLabel","lastElementChild","last","previousElementSibling","nextRadioButton","nextNodeLabel","next","previousRadioButton","prevNodeLabel","prev","getImage","child","firstChild","tagName","nextSibling","setRadioButton","state","tabIndex","renderSearchResults","users","renderForPromise","registerEventListeners","graderLayout","userPicker","saveGradeFunction","graderContainer","getContainer","buttons","toggleSearch","searchInputContainer","userSearchContainer","userSearchInput","sendNotificationsContainer","sendNotificationRadioButtons","querySelectorAll","console","log","e","target","closest","toggleFullscreen","stopImmediatePropagation","closeGrader","close","saveGrade","currentUser","innerHTML","selectUserButton","selectUser","userId","find","setUserId","showUser","i","rb","length","type","currentTarget","keyCode","radioButton","stopPropagation","getSaveUserGradeFunction","setGradeForUser","gradingPanelErrors","values","sendStudentNotifications","result","success","addToast","failed","displayGradingError","err","message","errorString","launch","getListOfUsers","initialUserId","moduleName","courseName","courseUrl","focusOnClose","addNotification","fullscreen","showLoader","drawer","show","defaultsendnotifications","updateUserContent","userIds","map","statusContainer","renderContext","index","indexOf","total","catch","rootNode","view","userid","Modal","create","title","large","types","CANCEL","modal","getRoot","on","ModalEvents","hidden","destroy","output","document","createElement","renderGradeTemplate","gradeHTML","gradeJS","gradeReplace","setBody","outerHTML"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * This module will tie together all of the different calls the gradable module will make.\n *\n * @module     mod_forum/local/grades/grader\n * @package    mod_forum\n * @copyright  2019 Mathew May <mathew.solutions>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nimport Templates from 'core/templates';\nimport Selectors from './local/grader/selectors';\nimport getUserPicker from './local/grader/user_picker';\nimport {createLayout as createFullScreenWindow} from 'mod_forum/local/layout/fullscreen';\nimport getGradingPanelFunctions from './local/grader/gradingpanel';\nimport {add as addToast} from 'core/toast';\nimport {addNotification} from 'core/notification';\nimport {get_string as getString} from 'core/str';\nimport {failedUpdate} from 'core_grades/grades/grader/gradingpanel/normalise';\nimport {addIconToContainerWithPromise} from 'core/loadingicon';\nimport {debounce} from 'core/utils';\nimport {fillInitialValues} from 'core_grades/grades/grader/gradingpanel/comparison';\nimport * as Modal from 'core/modal_factory';\nimport * as ModalEvents from 'core/modal_events';\n\nconst templateNames = {\n    grader: {\n        app: 'mod_forum/local/grades/grader',\n        gradingPanel: {\n            error: 'mod_forum/local/grades/local/grader/gradingpanel/error',\n        },\n        searchResults: 'mod_forum/local/grades/local/grader/user_picker/user_search',\n        status: 'mod_forum/local/grades/local/grader/status',\n    },\n};\n\n/**\n * Helper function that replaces the user picker placeholder with what we get back from the user picker class.\n *\n * @param {HTMLElement} root\n * @param {String} html\n */\nconst displayUserPicker = (root, html) => {\n    const pickerRegion = root.querySelector(Selectors.regions.pickerRegion);\n    Templates.replaceNodeContents(pickerRegion, html, '');\n};\n\n/**\n * To be removed, this is now done as a part of Templates.renderForPromise()\n *\n * @param {String} html\n * @param {String} js\n * @return {[*, *]}\n */\nconst fetchContentFromRender = (html, js) => {\n    return [html, js];\n};\n\n/**\n * Here we build the function that is passed to the user picker that'll handle updating the user content area\n * of the grading interface.\n *\n * @param {HTMLElement} root\n * @param {Function} getContentForUser\n * @param {Function} getGradeForUser\n * @param {Function} saveGradeForUser\n * @return {Function}\n */\nconst getUpdateUserContentFunction = (root, getContentForUser, getGradeForUser, saveGradeForUser) => {\n    let firstLoad = true;\n\n    return async(user) => {\n        const spinner = firstLoad ? null : addIconToContainerWithPromise(root);\n        const [\n            [html, js],\n            userGrade,\n        ] = await Promise.all([\n            getContentForUser(user.id).then(fetchContentFromRender),\n            getGradeForUser(user.id),\n        ]);\n        Templates.replaceNodeContents(root.querySelector(Selectors.regions.moduleReplace), html, js);\n\n        const [\n            gradingPanelHtml,\n            gradingPanelJS\n        ] = await Templates.render(userGrade.templatename, userGrade.grade).then(fetchContentFromRender);\n        const panelContainer = root.querySelector(Selectors.regions.gradingPanelContainer);\n        const panel = panelContainer.querySelector(Selectors.regions.gradingPanel);\n        Templates.replaceNodeContents(panel, gradingPanelHtml, gradingPanelJS);\n\n        const form = panel.querySelector('form');\n        fillInitialValues(form);\n\n        form.addEventListener('submit', event => {\n            saveGradeForUser(user);\n            event.preventDefault();\n        });\n\n        panelContainer.scrollTop = 0;\n        firstLoad = false;\n\n        if (spinner) {\n            spinner.resolve();\n        }\n    };\n};\n\n/**\n * Show the search results container and hide the user picker and body content.\n *\n * @param {HTMLElement} bodyContainer The container element for the body content\n * @param {HTMLElement} userPickerContainer The container element for the user picker\n * @param {HTMLElement} searchResultsContainer The container element for the search results\n */\nconst showSearchResultContainer = (bodyContainer, userPickerContainer, searchResultsContainer) => {\n    bodyContainer.classList.add('hidden');\n    userPickerContainer.classList.add('hidden');\n    searchResultsContainer.classList.remove('hidden');\n};\n\n/**\n * Hide the search results container and show the user picker and body content.\n *\n * @param {HTMLElement} bodyContainer The container element for the body content\n * @param {HTMLElement} userPickerContainer The container element for the user picker\n * @param {HTMLElement} searchResultsContainer The container element for the search results\n */\nconst hideSearchResultContainer = (bodyContainer, userPickerContainer, searchResultsContainer) => {\n    bodyContainer.classList.remove('hidden');\n    userPickerContainer.classList.remove('hidden');\n    searchResultsContainer.classList.add('hidden');\n};\n\n/**\n * Toggles the visibility of the user search.\n *\n * @param {HTMLElement} toggleSearchButton The button that toggles the search\n * @param {HTMLElement} searchContainer The container element for the user search\n * @param {HTMLElement} searchInput The input element for searching\n */\nconst showUserSearchInput = (toggleSearchButton, searchContainer, searchInput) => {\n    searchContainer.classList.remove('collapsed');\n    toggleSearchButton.setAttribute('aria-expanded', 'true');\n    toggleSearchButton.classList.add('expand');\n    toggleSearchButton.classList.remove('collapse');\n    searchInput.focus();\n};\n\n/**\n * Toggles the visibility of the user search.\n *\n * @param {HTMLElement} toggleSearchButton The button that toggles the search\n * @param {HTMLElement} searchContainer The container element for the user search\n * @param {HTMLElement} searchInput The input element for searching\n */\nconst hideUserSearchInput = (toggleSearchButton, searchContainer, searchInput) => {\n    searchContainer.classList.add('collapsed');\n    toggleSearchButton.setAttribute('aria-expanded', 'false');\n    toggleSearchButton.classList.add('collapse');\n    toggleSearchButton.classList.remove('expand');\n    toggleSearchButton.focus();\n    searchInput.value = '';\n};\n\n/**\n * Find the list of users who's names include the given search term.\n *\n * @param {Array} userList List of users for the grader\n * @param {String} searchTerm The search term to match\n * @return {Array}\n */\nconst searchForUsers = (userList, searchTerm) => {\n    if (searchTerm === '') {\n        return userList;\n    }\n\n    searchTerm = searchTerm.toLowerCase();\n\n    return userList.filter((user) => {\n        return user.fullname.toLowerCase().includes(searchTerm);\n    });\n};\n\n/**\n * Toggles the visibility of the user search.\n *\n * @param {HTMLElement} toggleSearchButton The button that toggles the search\n * @param {HTMLElement} searchContainer The container element for the user search\n * @param {HTMLElement} searchInput The input element for searching\n */\nconst firstRadioButton = (node) => {\n\n      var nodeLabel = node.parentElement;\n      var firstNodeLabel = nodeLabel.parentNode.firstElementChild;\n      var first = firstNodeLabel.children[0];\n\n      while (first) {\n          if (first.nodeType === Node.ELEMENT_NODE) {\n              if (first.getAttribute(\"type\") === 'radio') {\n                  return first;\n              }\n        }\n        firstNodeLabel = firstNodeLabel.nextElementSibling;\n        first = firstNodeLabel.children[0];\n      }\n\n      return null;\n};\n\n/**\n * Toggles the visibility of the user search.\n *\n * @param {HTMLElement} toggleSearchButton The button that toggles the search\n * @param {HTMLElement} searchContainer The container element for the user search\n * @param {HTMLElement} searchInput The input element for searching\n */\nconst lastRadioButton = (node) => {\n\n    var nodeLabel = node.parentElement;\n    var lastNodeLabel = nodeLabel.parentNode.lastElementChild;\n    var last = lastNodeLabel.children[0];\n\n    while (last) {\n        if (last.nodeType === Node.ELEMENT_NODE) {\n            if (last.getAttribute(\"type\") === 'radio') {\n                return last;\n            }\n        }\n        lastNodeLabel = lastNodeLabel.previousElementSibling;\n        last = lastNodeLabel.children[0];\n    }\n\n    return last;\n};\n\n/**\n * Toggles the visibility of the user search.\n *\n * @param {HTMLElement} toggleSearchButton The button that toggles the search\n * @param {HTMLElement} searchContainer The container element for the user search\n * @param {HTMLElement} searchInput The input element for searching\n */\nconst nextRadioButton = (node) => {\n\n    var nodeLabel = node.parentElement;\n\n    var nextNodeLabel = nodeLabel.nextElementSibling;\n    if (nextNodeLabel === null) {\n        return null;\n    }\n    var next = nextNodeLabel.children[0];\n\n    while (next) {\n        if (next.nodeType === Node.ELEMENT_NODE) {\n            if (next.getAttribute(\"type\") === 'radio') {\n                return next;\n            }\n        }\n        nextNodeLabel = nextNodeLabel.nextElementSibling;\n        next = nextNodeLabel.children[0];\n    }\n\n    return null;\n};\n\n/**\n * Toggles the visibility of the user search.\n *\n * @param {HTMLElement} toggleSearchButton The button that toggles the search\n * @param {HTMLElement} searchContainer The container element for the user search\n * @param {HTMLElement} searchInput The input element for searching\n */\nconst previousRadioButton = (node) => {\n\n    var nodeLabel = node.parentElement;\n    var prevNodeLabel = nodeLabel.previousElementSibling;\n    var prev = prevNodeLabel.children[0];\n\n    while (prev) {\n        if (prev.nodeType === Node.ELEMENT_NODE) {\n            if (prev.getAttribute(\"type\") === 'radio') {\n                return prev;\n            }\n        }\n        prevNodeLabel = prevNodeLabel.previousElementSibling;\n        prev = prevNodeLabel.children[0];\n    }\n\n    return null;\n};\n\n/**\n * Toggles the visibility of the user search.\n *\n * @param {HTMLElement} toggleSearchButton The button that toggles the search\n * @param {HTMLElement} searchContainer The container element for the user search\n * @param {HTMLElement} searchInput The input element for searching\n */\nconst getImage = (node) => {\n\n    var child = node.firstChild;\n\n    while(child) {\n        if (child.nodeType === Node.ELEMENT_NODE) {\n            if (child.tagName === 'IMG') {\n                return child;\n            }\n        }\n        child = child.nextSibling;\n    }\n\n    return null;\n};\n\n/**\n * Toggles the visibility of the user search.\n *\n * @param {HTMLElement} toggleSearchButton The button that toggles the search\n * @param {HTMLElement} searchContainer The container element for the user search\n * @param {HTMLElement} searchInput The input element for searching\n */\nconst setRadioButton = (node, state) => {\n\n    var image = getImage(node);\n\n    if (state == 'true') {\n        node.setAttribute('aria-checked', 'true');\n        node.tabIndex = 0;\n        node.focus();\n    } else {\n        node.setAttribute('aria-checked', 'false');\n        node.tabIndex = -1;\n    }\n};\n\n/**\n * Render the list of users in the search results area.\n *\n * @param {HTMLElement} searchResultsContainer The container element for search results\n * @param {Array} users The list of users to display\n */\nconst renderSearchResults = async(searchResultsContainer, users) => {\n    const {html, js} = await Templates.renderForPromise(templateNames.grader.searchResults, {users});\n    Templates.replaceNodeContents(searchResultsContainer, html, js);\n};\n\n/**\n * Add click handlers to the buttons in the header of the grading interface.\n *\n * @param {HTMLElement} graderLayout\n * @param {Object} userPicker\n * @param {Function} saveGradeFunction\n * @param {Array} userList List of users for the grader.\n */\nconst registerEventListeners = (graderLayout, userPicker, saveGradeFunction, userList) => {\n    const graderContainer = graderLayout.getContainer();\n    const toggleSearchButton = graderContainer.querySelector(Selectors.buttons.toggleSearch);\n    const searchInputContainer = graderContainer.querySelector(Selectors.regions.userSearchContainer);\n    const searchInput = searchInputContainer.querySelector(Selectors.regions.userSearchInput);\n    const bodyContainer = graderContainer.querySelector(Selectors.regions.bodyContainer);\n    const userPickerContainer = graderContainer.querySelector(Selectors.regions.pickerRegion);\n    const searchResultsContainer = graderContainer.querySelector(Selectors.regions.searchResultsContainer);\n    const sendNotificationsContainer = graderContainer.querySelector(Selectors.regions.sendNotificationsContainer);\n    const sendNotificationRadioButtons = sendNotificationsContainer.querySelectorAll('input[type=radio]');\n    console.log(sendNotificationRadioButtons);\n\n    graderContainer.addEventListener('click', (e) => {\n        if (e.target.closest(Selectors.buttons.toggleFullscreen)) {\n            e.stopImmediatePropagation();\n            e.preventDefault();\n            graderLayout.toggleFullscreen();\n\n            return;\n        }\n\n        if (e.target.closest(Selectors.buttons.closeGrader)) {\n            e.stopImmediatePropagation();\n            e.preventDefault();\n\n            graderLayout.close();\n\n            return;\n        }\n\n        if (e.target.closest(Selectors.buttons.saveGrade)) {\n            saveGradeFunction(userPicker.currentUser);\n        }\n\n        if (e.target.closest(Selectors.buttons.toggleSearch)) {\n            if (toggleSearchButton.getAttribute('aria-expanded') === 'true') {\n                // Search is open so let's close it.\n                hideUserSearchInput(toggleSearchButton, searchInputContainer, searchInput);\n                hideSearchResultContainer(bodyContainer, userPickerContainer, searchResultsContainer);\n                searchResultsContainer.innerHTML = '';\n            } else {\n                // Search is closed so let's open it.\n                showUserSearchInput(toggleSearchButton, searchInputContainer, searchInput);\n                showSearchResultContainer(bodyContainer, userPickerContainer, searchResultsContainer);\n                renderSearchResults(searchResultsContainer, userList);\n            }\n\n            return;\n        }\n\n        const selectUserButton = e.target.closest(Selectors.buttons.selectUser);\n        if (selectUserButton) {\n            const userId = selectUserButton.getAttribute('data-userid');\n            const user = userList.find(user => user.id == userId);\n            userPicker.setUserId(userId);\n            userPicker.showUser(user);\n            hideUserSearchInput(toggleSearchButton, searchInputContainer, searchInput);\n            hideSearchResultContainer(bodyContainer, userPickerContainer, searchResultsContainer);\n            searchResultsContainer.innerHTML = '';\n        }\n    });\n\n    // Debounce the search input so that it only executes 300 milliseconds after the user has finished typing.\n    searchInput.addEventListener('input', debounce(() => {\n        const users = searchForUsers(userList, searchInput.value);\n        renderSearchResults(searchResultsContainer, users);\n    }, 300));\n\n    for (var i = 0; i < sendNotificationRadioButtons.length; i++) {\n        var rb = sendNotificationRadioButtons[i];\n\n        console.log(rb.tagName + \" \" + rb.id);\n\n        rb.addEventListener('keydown', function(event) {\n            var type = event.type;\n            var next = false;\n\n            if (type === \"keydown\") {\n                var node = event.currentTarget;\n\n                switch (event.keyCode) {\n                    case 40:\n                    case 39:\n                        var next = nextRadioButton(node);\n                        if (!next) {\n                            next = firstRadioButton(node);\n                    } //if node is the last node, node cycles to first.\n                    break;\n\n                    case 38:\n                    case 37:\n                        next = previousRadioButton(node);\n                        if (!next) {\n                        next = lastRadioButton(node);\n                    } //if node is the last node, node cycles to first.\n                    break;\n\n                    case 32:\n                        next = node;\n                        break;\n                }\n\n                if (next) {\n                    var radioButton = firstRadioButton(node);\n\n                    while (radioButton) {\n                        setRadioButton(radioButton, \"false\");\n                        radioButton = nextRadioButton(radioButton);\n                  }\n\n                  setRadioButton(next, \"true\");\n\n                  event.preventDefault();\n                  event.stopPropagation();\n                }\n            }\n        });\n      }\n};\n\n/**\n * Get the function used to save a user grade.\n *\n * @param {HTMLElement} root The container for the grader\n * @param {Function} setGradeForUser The function that will be called.\n * @return {Function}\n */\nconst getSaveUserGradeFunction = (root, setGradeForUser) => {\n    return async(user) => {\n        try {\n            root.querySelector(Selectors.regions.gradingPanelErrors).innerHTML = '';\n            const result = await setGradeForUser(\n                user.id,\n                root.querySelector(Selectors.values.sendStudentNotifications).value,\n                root.querySelector(Selectors.regions.gradingPanel)\n            );\n            if (result.success) {\n                addToast(await getString('grades:gradesavedfor', 'mod_forum', user));\n            }\n            if (result.failed) {\n                displayGradingError(root, user, result.error);\n            }\n\n            return result;\n        } catch (err) {\n            displayGradingError(root, user, err);\n\n            return failedUpdate(err);\n        }\n    };\n};\n\n/**\n * Display a grading error, typically from a failed save.\n *\n * @param {HTMLElement} root The container for the grader\n * @param {Object} user The user who was errored\n * @param {Object} err The details of the error\n */\nconst displayGradingError = async(root, user, err) => {\n    const [\n        {html, js},\n        errorString\n    ] = await Promise.all([\n        Templates.renderForPromise(templateNames.grader.gradingPanel.error, {error: err}),\n        await getString('grades:gradesavefailed', 'mod_forum', {error: err.message, ...user}),\n    ]);\n\n    Templates.replaceNodeContents(root.querySelector(Selectors.regions.gradingPanelErrors), html, js);\n    addToast(errorString);\n};\n\n/**\n * Launch the grader interface with the specified parameters.\n *\n * @param {Function} getListOfUsers A function to get the list of users\n * @param {Function} getContentForUser A function to get the content for a specific user\n * @param {Function} getGradeForUser A function get the grade details for a specific user\n * @param {Function} setGradeForUser A function to set the grade for a specific user\n * @param {Object} Preferences for the launch function\n */\nexport const launch = async(getListOfUsers, getContentForUser, getGradeForUser, setGradeForUser, {\n    initialUserId = null,\n    moduleName,\n    courseName,\n    courseUrl,\n    sendStudentNotifications,\n    focusOnClose = null,\n} = {}) => {\n\n    // We need all of these functions to be executed in series, if one step runs before another the interface\n    // will not work.\n\n    // We need this promise to resolve separately so that we can avoid loading the whole interface if there are no users.\n    const userList = await getListOfUsers();\n    if (!userList.length) {\n        addNotification({\n            message: await getString('nouserstograde', 'core_grades'),\n            type: \"error\",\n        });\n        return;\n    }\n\n    // Now that we have confirmed there are at least some users let's boot up the grader interface.\n    const [\n        graderLayout,\n        {html, js},\n    ] = await Promise.all([\n        createFullScreenWindow({\n            fullscreen: false,\n            showLoader: false,\n            focusOnClose,\n        }),\n        Templates.renderForPromise(templateNames.grader.app, {\n            moduleName,\n            courseName,\n            courseUrl,\n            drawer: {show: true},\n            defaultsendnotifications: sendStudentNotifications,\n        }),\n    ]);\n\n    const graderContainer = graderLayout.getContainer();\n\n    const saveGradeFunction = getSaveUserGradeFunction(graderContainer, setGradeForUser);\n\n    Templates.replaceNodeContents(graderContainer, html, js);\n    const updateUserContent = getUpdateUserContentFunction(graderContainer, getContentForUser, getGradeForUser, saveGradeFunction);\n\n    const userIds = userList.map(user => user.id);\n    const statusContainer = graderContainer.querySelector(Selectors.regions.statusContainer);\n    // Fetch the userpicker for display.\n    const userPicker = await getUserPicker(\n        userList,\n        user => {\n            const renderContext = {\n                status: null,\n                index: userIds.indexOf(user.id) + 1,\n                total: userList.length\n            };\n            Templates.render(templateNames.grader.status, renderContext).then(html => {\n                statusContainer.innerHTML = html;\n                return html;\n            }).catch();\n            updateUserContent(user);\n        },\n        saveGradeFunction,\n        {\n            initialUserId,\n        },\n    );\n\n    // Register all event listeners.\n    registerEventListeners(graderLayout, userPicker, saveGradeFunction, userList);\n\n    // Display the newly created user picker.\n    displayUserPicker(graderContainer, userPicker.rootNode);\n};\n\n/**\n * Show the grade for a specific user.\n *\n * @param {Function} getGradeForUser A function get the grade details for a specific user\n * @param {Number} userid The ID of a specific user\n * @param {String} moduleName the name of the module\n */\nexport const view = async(getGradeForUser, userid, moduleName, {\n    focusOnClose = null,\n} = {}) => {\n\n    const [\n        userGrade,\n        modal,\n    ] = await Promise.all([\n        getGradeForUser(userid),\n        Modal.create({\n            title: moduleName,\n            large: true,\n            type: Modal.types.CANCEL\n        }),\n    ]);\n\n    const spinner = addIconToContainerWithPromise(modal.getRoot());\n\n    // Handle hidden event.\n    modal.getRoot().on(ModalEvents.hidden, function() {\n        // Destroy when hidden.\n        modal.destroy();\n        if (focusOnClose) {\n            try {\n                focusOnClose.focus();\n            } catch (e) {\n                // eslint-disable-line\n            }\n        }\n    });\n\n    modal.show();\n    const output = document.createElement('div');\n    const {html, js} = await Templates.renderForPromise('mod_forum/local/grades/view_grade', userGrade);\n    Templates.replaceNodeContents(output, html, js);\n\n    // Note: We do not use await here because it messes with the Modal transitions.\n    const [gradeHTML, gradeJS] = await renderGradeTemplate(userGrade);\n    const gradeReplace = output.querySelector('[data-region=\"grade-template\"]');\n    Templates.replaceNodeContents(gradeReplace, gradeHTML, gradeJS);\n    modal.setBody(output.outerHTML);\n    spinner.resolve();\n};\n\nconst renderGradeTemplate = async(userGrade) => {\n    const {html, js} = await Templates.renderForPromise(userGrade.templatename, userGrade.grade);\n    return [html, js];\n};\nexport {getGradingPanelFunctions};\n"],"file":"grader.min.js"}