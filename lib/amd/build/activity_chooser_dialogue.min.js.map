{"version":3,"sources":["../src/activity_chooser_dialogue.js"],"names":["define","Y","$","PubSub","ActivityChooserEvents","FocusLock","ModalFactory","ModalEvents","panel","listenevents","bodycontent","headercontent","ATTRS","minheight","baseheight","maxheight","closeButtonTitle","validator","Lang","isString","value","cancelListenevents","thisevent","length","shift","off","hide","cancelPopup","e","preventDefault","SELECTORS","MODULE_CHOOSER_CONTAINER","MODULES_AREA","MODULE_AREA","MODULE_INFO_AREA","MODULE_INFO_ACTIONS","ADD_MODULE","SHOW_MODULE_SUMMARY","MODULE_SUMMARY_AREA","MODULE_SUMMARY_ACTIONS","CLOSE_MODULE_SUMMARY","registerListenerEvents","on","modSummaryElement","target","closest","find","openModSummary","push","removeClass","index","moduleItemOuterWidth","outerWidth","moduleItemsWrapperWidth","width","moduleItemsPerRow","Math","floor","moduleItems","totalModuleItems","totalRowsCount","ceil","indexRow","keyCode","nextIndex","moveToOption","prevIndex","lastModuleItemIndex","addModuleInfoElement","attr","focus","stopPropagation","actionElements","next","nextAction","prev","prevAction","optionElement","hasClass","typeSummaryEl","prepareChooser","sectionid","body","detach","create","type","types","DEFAULT","html","title","large","then","modal","getRoot","shown","anchors","each","anchor","href","modules","firstModule","moreInfoLinks","key","moreInfoLink","bind","hidden","remove","show","topPosition","scrollTop","height","outerHeight","addClass","setTypeSummaryPositionAndHeight","typeSummaryContentElement","cancelAction","addAction","element","position","console","log","modSummaryContentElement","modSumarryFooterElement","contentHeight","css","fromOption","toOption","setupChooserDialogue","displayChooser","updateHiddenRadioValue","name"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A system for displaying notifications to users from the session.\n *\n * Wrapper for the YUI M.core.notification class. Allows us to\n * use the YUI version in AMD code until it is replaced.\n *\n * @module     core/activity_chooser_dialogue\n * @package    core\n * @copyright  2019 Mihail Geshoski <mihail@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n * @since      3.7\n */\ndefine(\n    [\n        'core/yui',\n        'jquery',\n        'core/pubsub',\n        'core/activity_chooser_events',\n        'core/local/aria/focuslock',\n        'core/modal_factory',\n        'core/modal_events'\n    ],\n    function(\n        Y,\n        $,\n        PubSub,\n        ActivityChooserEvents,\n        FocusLock,\n        ModalFactory,\n        ModalEvents\n    ) {\n\n     // The panel widget\n    var panel = null;\n\n    // The submit button - we disable this until an element is set\n    var submitbutton = null;\n\n    // The chooserdialogue container\n    var container = null;\n\n    var options = null;\n\n    // Any event listeners we may need to cancel later\n    var listenevents = [];\n\n    var bodycontent = null;\n    var headercontent = null;\n    var instanceconfig = null;\n\n    // The hidden field storing the disabled element values for submission.\n    var hiddenRadioValue = null;\n\n    var ATTRS = {\n        /**\n         * The minimum height (in pixels) before resizing is prevented and scroll\n         * locking disabled.\n         *\n         * @attribute minheight\n         * @type Number\n         * @default 300\n         */\n        minheight: 300,\n\n        /**\n         * The base height??\n         *\n         * @attribute baseheight\n         * @type Number\n         * @default 400\n         */\n        baseheight: 400,\n\n        /**\n         * The maximum height (in pixels) at which we stop resizing.\n         *\n         * @attribute maxheight\n         * @type Number\n         * @default 300\n         */\n        maxheight: 660,\n\n        /**\n         * The title of the close button.\n         *\n         * @attribute closeButtonTitle\n         * @type String\n         * @default 'Close'\n         */\n        closeButtonTitle: {\n            validator: Y.Lang.isString,\n            value: 'Close'\n        }\n    };\n\n    var setupChooserDialogue = function(body, title) {\n        bodycontent = body;\n        headercontent = title;\n    };\n\n    /**\n     * Cancel any listen events in the listenevents queue\n     *\n     * Several locations add event handlers which should only be called before the form is submitted. This provides\n     * a way of cancelling those events.\n     *\n     * @method cancel_listenevents\n     */\n    var cancelListenevents = function() {\n        // Detach all listen events to prevent duplicate triggers\n        var thisevent;\n        while (listenevents.length) {\n            thisevent = listenevents.shift();\n            $(thisevent).off();\n        }\n    };\n\n    var hide = function() {\n        // Cancel all listen events\n        cancelListenevents();\n        container.off();\n        panel.hide();\n    };\n\n    var cancelPopup = function(e) {\n        // Prevent normal form submission before hiding\n        e.preventDefault();\n        hide();\n    };\n\n    //   /**\n    //  * Return an array of class names prefixed with 'modchooserdialogue-' and\n    //  * the name of the type of dialogue.\n    //  *\n    //  * Note: Class name are converted to lower-case.\n    //  *\n    //  * If an array of arguments is supplied, each of these is prefixed and\n    //  * lower-cased also.\n    //  *\n    //  * If no arguments are supplied, then the prefix is returned on it's\n    //  * own.\n    //  *\n    //  * @method _getClassNames\n    //  * @param {Array} [args] Any additional names to prefix and lower-case.\n    //  * @return {Array}\n    //  * @private\n    //  */\n    // var _getClassNames = function(args) {\n    //     var prefix = 'modchooserdialogue-course-modchooser',\n    //         results = [];\n    //\n    //     results.push(prefix.toLowerCase());\n    //     if (args) {\n    //         var arg;\n    //         for (arg in args) {\n    //             results.push((prefix + '-' + arg).toLowerCase());\n    //         }\n    //     }\n    //\n    //     return results;\n    // };\n\n    var SELECTORS = {\n        MODULE_CHOOSER_CONTAINER: '.modchoosercontainer',\n        MODULES_AREA: '.modulescontainer',\n        MODULE_AREA: '.module',\n        MODULE_INFO_AREA: '.modinfo',\n        MODULE_INFO_ACTIONS: {\n            ADD_MODULE: '.modinfo .modicon a',\n            SHOW_MODULE_SUMMARY: '.modinfo .modactions .showmodsummary i'\n        },\n        MODULE_SUMMARY_AREA: '.modsummary',\n        MODULE_SUMMARY_ACTIONS: {\n            ADD_MODULE: '.modsummary .actions .addmodule',\n            CLOSE_MODULE_SUMMARY: '.modsummary .actions .closemodsummary'\n        }\n    };\n\n    var registerListenerEvents = function() {\n        // Show the module summary.\n        var thisevent = $(SELECTORS.MODULE_INFO_ACTIONS.SHOW_MODULE_SUMMARY).on('click', function(e) {\n            var modSummaryElement = $(e.target).closest(SELECTORS.MODULE_AREA).find(SELECTORS.MODULE_SUMMARY_AREA);\n            openModSummary(modSummaryElement);\n        });\n        listenevents.push(thisevent);\n\n        // Close the module summary.\n        thisevent = $(SELECTORS.MODULE_SUMMARY_ACTIONS.CLOSE_MODULE_SUMMARY).on('click', function(e) {\n            var modSummaryElement = $(e.target).closest(SELECTORS.MODULE_AREA).find(SELECTORS.MODULE_SUMMARY_AREA);\n            modSummaryElement.removeClass('open');\n            $(SELECTORS.MODULE_CHOOSER_CONTAINER).removeClass('noscroll');\n        });\n        listenevents.push(thisevent);\n\n        thisevent = $(SELECTORS.MODULE_AREA).on('keydown', function(e) {\n            var index = $(this).index();\n            var moduleItemOuterWidth = $(SELECTORS.MODULE_AREA).outerWidth();\n            var moduleItemsWrapperWidth = $(SELECTORS.MODULES_AREA).width();\n            var moduleItemsPerRow = Math.floor(moduleItemsWrapperWidth / moduleItemOuterWidth);\n            var moduleItems = $(SELECTORS.MODULES_AREA).find(SELECTORS.MODULE_AREA);\n            var totalModuleItems = moduleItems.length;\n            var totalRowsCount = Math.ceil(moduleItems.length / moduleItemsPerRow);\n            var indexRow = Math.ceil((index + 1) / moduleItemsPerRow);\n\n            // Right key.\n            if (e.keyCode === 39) {\n                var nextIndex = index + 1;\n                if (typeof moduleItems[nextIndex] === 'undefined') {\n                    return;\n                }\n                moveToOption(moduleItems[index], moduleItems[nextIndex]);\n            }\n\n            // Left key.\n            if (e.keyCode === 37) {\n                var prevIndex = index - 1;\n                if (typeof moduleItems[prevIndex] === 'undefined') {\n                    return;\n                }\n                moveToOption(moduleItems[index], moduleItems[prevIndex]);\n            }\n\n            // Down key.\n            if (e.keyCode === 40) {\n                // If the focus is on an element from the last visual row.\n                if (indexRow == totalRowsCount) {\n                    return;\n                }\n                var nextIndex = index + moduleItemsPerRow;\n                if (typeof moduleItems[nextIndex] === 'undefined') {\n                    nextIndex = totalModuleItems - 1;\n                }\n                moveToOption(moduleItems[index], moduleItems[nextIndex]);\n            }\n\n            // Up key.\n            if (e.keyCode === 38) {\n                // if the focus is on an element from the first visual row.\n                if (indexRow === 1) {\n                    return;\n                }\n                var prevIndex = index - moduleItemsPerRow;\n                if (typeof moduleItems[prevIndex] === 'undefined') {\n                    prevIndex = 0;\n                }\n                moveToOption(moduleItems[index], moduleItems[prevIndex]);\n            }\n\n            // End key.\n            if (e.keyCode === 35) {\n                var lastModuleItemIndex = totalModuleItems - 1;\n                if (index === lastModuleItemIndex) {\n                    return;\n                }\n                moveToOption(moduleItems[index], moduleItems[lastModuleItemIndex]);\n            }\n\n            // Home key.\n            if (e.keyCode === 36) {\n                var firstModuleItemIndex = 0;\n                if (index === firstModuleItemIndex) {\n                    return;\n                }\n                moveToOption(moduleItems[index], moduleItems[firstModuleItemIndex]);\n            }\n\n            // Enter, space key.\n            if (e.keyCode === 13 || e.keyCode == 32) {\n                var addModuleInfoElement = $(this).find(SELECTORS.MODULE_INFO_ACTIONS.ADD_MODULE);\n                $(addModuleInfoElement).attr('tabindex', 0);\n                $(addModuleInfoElement).focus();\n                $(this).attr('tabindex', -1);\n            }\n        });\n        listenevents.push(thisevent);\n\n        thisevent = $(\".actionelement\").on('keydown', function(e) {\n             e.preventDefault();\n             e.stopPropagation();\n\n            var actionElements = $(this).closest(\"label\").find(\".actionelement\");\n            var index = $(actionElements).index(this);\n\n            // down key.\n            if (e.keyCode === 40 || e.keyCode === 39) {\n                var next = index + 1;\n                if (typeof actionElements[next] === 'undefined') {\n                    return;\n                }\n                var nextAction = actionElements[next];\n                $(nextAction).attr('tabindex', 0);\n                $(nextAction).focus();\n                $(this).attr('tabindex', -1);\n            }\n\n            // up key.\n            if (e.keyCode === 38 || e.keyCode === 37) {\n                var prev = index - 1;\n                if (typeof actionElements[prev] === 'undefined') {\n                    return;\n                }\n                var prevAction = actionElements[prev];\n                $(prevAction).attr('tabindex', 0);\n                $(prevAction).focus();\n                $(this).attr('tabindex', -1);\n            }\n\n            if (e.keyCode === 27) {\n                var optionElement = $(this).closest('.option');\n                $(optionElement).attr('tabindex', 0);\n                $(optionElement).focus();\n                $(this).attr('tabindex', -1);\n            }\n\n            if (e.keyCode === 13) {\n                if ($(this).hasClass('info')) {\n                    var typeSummaryEl = $(this).closest('label').find('.typesummary');\n                    openModSummary(typeSummaryEl);\n                }\n                return;\n            }\n        });\n        listenevents.push(thisevent);\n    };\n\n    var prepareChooser = function(sectionid) {\n        var body = bodycontent.detach();\n\n        // Stop the default event actions before we proceed.\n        return ModalFactory.create({\n            type: ModalFactory.types.DEFAULT,\n            body: body.html(),\n            title: headercontent.html(),\n            large: true\n        }).then(function(modal) {\n            modal.getRoot().on(ModalEvents.shown, function() {\n                // Find all anchors used to add an activity and append the section param to the url.\n                var anchors = $(SELECTORS.MODULE_AREA)\n                    .find(SELECTORS.MODULE_INFO_ACTIONS.ADD_MODULE + ', ' + SELECTORS.MODULE_SUMMARY_ACTIONS.ADD_MODULE);\n                anchors.each(function(index, anchor) {\n                    anchor.href += '&section=' + sectionid;\n                });\n\n                var modules = $(SELECTORS.MODULES_AREA).find(SELECTORS.MODULE_AREA);\n                var firstModule = modules[0];\n                $(firstModule).attr(\"tabindex\", 0);\n\n                var moreInfoLinks = $(SELECTORS.MODULE_SUMMARY_AREA).find('.helplinkpopup');\n                moreInfoLinks.each(function(key, moreInfoLink) {\n                    $(moreInfoLink).attr('tabindex', -1);\n                });\n\n                registerListenerEvents();\n            }.bind(this));\n\n            // We want to focus on the action select when the dialog is closed.\n            modal.getRoot().on(ModalEvents.hidden, function() {\n                modal.getRoot().remove();\n            }.bind(this));\n\n\n            // // This will detect a change in orientation and retrigger centering.\n            // thisevent = $(document).on('orientationchange', function() {\n            //     centerDialogue(dialogue);\n            // });\n            // listenevents.push(thisevent);\n            //\n            // // Detect window resizes (most browsers).\n            // thisevent = $(window).on('resize', function() {\n            //     centerDialogue(dialogue);\n            // });\n            // listenevents.push(thisevent);\n\n            // thisevent = container.on('keyup', function() {\n            //     console.log(\"Herreee\");\n            //     //checkOptions();\n            // });\n            // listenevents.push(thisevent);\n\n            // thisevent = $(SELECTORS.MODULE_AREA).on('keydown', function(e) {\n            //     var index = $(this).index();\n            //     var optionOuterWidth = $(SELECTORS.MODULE_AREA).outerWidth();\n            //     var wrapperWidth = $(SELECTORS.MODULES_AREA).width();\n            //     var rowOptions = Math.floor(wrapperWidth / optionOuterWidth);\n            //     var totalOptions = options.length;\n            //     var totalRowsCount = Math.floor(options.length / rowOptions);\n            //     var indexRow = Math.ceil((index + 1) / rowOptions);\n            //\n            //     // Right key.\n            //     if (e.keyCode === 39) {\n            //         var nextIndex = index + 1;\n            //         if (typeof options[nextIndex] === 'undefined') {\n            //             return;\n            //         }\n            //         moveToOption(options[index], options[nextIndex]);\n            //     }\n            //\n            //     // Left key.\n            //     if (e.keyCode === 37) {\n            //         var prevIndex = index - 1;\n            //         if (typeof options[prevIndex] === 'undefined') {\n            //             return;\n            //         }\n            //         moveToOption(options[index], options[prevIndex]);\n            //     }\n            //\n            //     // down key.\n            //     if (e.keyCode === 40) {\n            //         // If the focus is on an element from the last visual row.\n            //         if (indexRow == totalRowsCount) {\n            //             return;\n            //         }\n            //         var nextIndex = index + rowOptions;\n            //         if (typeof options[nextIndex] === 'undefined') {\n            //             nextIndex = totalOptions - 1;\n            //         }\n            //         moveToOption(options[index], options[nextIndex]);\n            //     }\n            //\n            //     // up key.\n            //     if (e.keyCode === 38) {\n            //         // if the focus is on an element from the first visual row.\n            //         if (indexRow === 1) {\n            //             return;\n            //         }\n            //         var prevIndex = index - rowOptions;\n            //         if (typeof options[prevIndex] === 'undefined') {\n            //             prevIndex = 0;\n            //         }\n            //         moveToOption(options[index], options[prevIndex]);\n            //     }\n            //\n            //     // end key.\n            //     if (e.keyCode === 35) {\n            //         var lastOptionIndex = totalOptions - 1;\n            //         if (index === lastOptionIndex) {\n            //             return;\n            //         }\n            //         moveToOption(options[index], options[lastOptionIndex]);\n            //     }\n            //\n            //     // home key.\n            //     if (e.keyCode === 36) {\n            //         var firstOptionIndex = 0;\n            //         if (index === firstOptionIndex) {\n            //             return;\n            //         }\n            //         moveToOption(options[index], options[firstOptionIndex]);\n            //     }\n            //\n            //     if (e.keyCode === 13 || e.keyCode == 32) {\n            //         var addModuleInfoElement = $(this).find(SELECTORS.MODULE_INFO_ACTIONS.ADD_MODULE);\n            //         $(addModuleInfoElement).attr('tabindex', 0);\n            //         $(addModuleInfoElement).focus();\n            //         $(this).attr('tabindex', -1);\n            //     }\n            // });\n            // listenevents.push(thisevent);\n            //\n            // thisevent = $(\".actionelement\").on('keydown', function(e) {\n            //      e.preventDefault();\n            //      e.stopPropagation();\n            //\n            //     var actionElements = $(this).closest(\"label\").find(\".actionelement\");\n            //     var index = $(actionElements).index(this);\n            //\n            //     // down key.\n            //     if (e.keyCode === 40 || e.keyCode === 39) {\n            //         var next = index + 1;\n            //         if (typeof actionElements[next] === 'undefined') {\n            //             return;\n            //         }\n            //         var nextAction = actionElements[next];\n            //         $(nextAction).attr('tabindex', 0);\n            //         $(nextAction).focus();\n            //         $(this).attr('tabindex', -1);\n            //     }\n            //\n            //     // up key.\n            //     if (e.keyCode === 38 || e.keyCode === 37) {\n            //         var prev = index - 1;\n            //         if (typeof actionElements[prev] === 'undefined') {\n            //             return;\n            //         }\n            //         var prevAction = actionElements[prev];\n            //         $(prevAction).attr('tabindex', 0);\n            //         $(prevAction).focus();\n            //         $(this).attr('tabindex', -1);\n            //     }\n            //\n            //     if (e.keyCode === 27) {\n            //         var optionElement = $(this).closest('.option');\n            //         $(optionElement).attr('tabindex', 0);\n            //         $(optionElement).focus();\n            //         $(this).attr('tabindex', -1);\n            //     }\n            //\n            //     if (e.keyCode === 13) {\n            //         if ($(this).hasClass('info')) {\n            //             var typeSummaryEl = $(this).closest('label').find('.typesummary');\n            //             openModSummary(typeSummaryEl);\n            //         }\n            //         return;\n            //     }\n            // });\n            // listenevents.push(thisevent);\n\n            // Hide will be managed by cancel_popup after restoring the body overflow.\n            // thisevent = bb.one('button.closebutton').on('click', function(e) {\n            //     cancelPopup(e);\n            // });\n            // listenevents.push(thisevent);\n\n            // Grab global keyup events and handle them\n            // thisevent = $(document).on('keydown', handleKeyPress(e));\n            // listenevents.push(thisevent);\n\n            modal.show();\n            return modal;\n        });\n    };\n\n        // // Ensure that we're showing the JS version of the chooser.\n        // $('body').addClass('jschooser');\n        // // Set Default options.\n        // var paramkey,\n        //     params = {\n        //         bodyContent: bodycontent.html(),\n        //         headerContent: headercontent.html(),\n        //         width: '540px',\n        //         draggable: true,\n        //         visible: false, // Hide by default\n        //         zindex: 100, // Display in front of other items\n        //         modal: true, // This dialogue should be modal.\n        //         shim: true,\n        //         closeButtonTitle: ATTRS.closeButtonTitle,\n        //         focusOnPreviousTargetAfterHide: true,\n        //         render: false,\n        //         extraClasses: _getClassNames()\n        //     };\n        //\n        // // Override with additional options.\n        // for (paramkey in instanceconfig) {\n        //   params[paramkey] = instanceconfig[paramkey];\n        // }\n        //\n        // // Create the panel\n        // panel = new M.core.dialogue(params);\n        //\n        // // Remove the template for the chooser.\n        // bodycontent.remove();\n        // headercontent.remove();\n        //\n        // // Hide and then render the panel.\n        // panel.hide();\n        // panel.render();\n        //\n        // // Set useful links.\n        // container = $(panel.get('boundingBox').one('.modchoosercontainer').getDOMNode());\n        // options = container.find('.option');\n        // // Get the first option and set the tabindex.\n        // var firstOption = options[0];\n        // $(firstOption).attr(\"tabindex\", 0);\n        //\n        // var moreinfolinks = container.find('.helplinkpopup');\n        // moreinfolinks.each(function(key, moreinfolink) {\n        //     $(moreinfolink).attr('tabindex', -1);\n        // });\n        //\n        // // Add the chooserdialogue class to the container for styling.\n        // panel.get('boundingBox').addClass('modchooserdialogue');\n    // };\n\n    /**\n      * Calculate the optimum height of the chooser dialogue\n      *\n      * This tries to set a sensible maximum and minimum to ensure that some options are always shown, and preferably\n      * all, whilst fitting the box within the current viewport.\n      *\n      * @method center_dialogue\n      * @param Node {dialogue} Y.Node The dialogue\n      */\n    var centerDialogue = function(dialogue) {\n        var bb = panel.get('boundingBox'),\n            winheight = bb.get('winHeight'),\n            newheight, totalheight;\n\n        if (panel.shouldResizeFullscreen()) {\n            // No custom sizing required for a fullscreen dialog.\n            return;\n        }\n\n        // Try and set a sensible max-height -- this must be done before setting the top\n        // Set a default height of 640px\n        newheight = ATTRS.maxheight;\n        if (winheight <= newheight) {\n            // Deal with smaller window sizes\n            if (winheight <= ATTRS.minheight) {\n                newheight = ATTRS.minheight;\n            } else {\n                newheight = winheight;\n            }\n        }\n\n        // If the dialogue is larger than a reasonable minimum height, we\n        // disable the page scrollbars.\n        if (newheight > ATTRS.minheight) {\n            // Disable the page scrollbars.\n            if (panel.lockScroll && !panel.lockScroll.isActive()) {\n                panel.lockScroll.enableScrollLock(true);\n            }\n        } else {\n            // Re-enable the page scrollbars.\n            if (panel.lockScroll && panel.lockScroll.isActive()) {\n                panel.lockScroll.disableScrollLock();\n            }\n        }\n\n        // Take off 15px top and bottom for borders, plus 40px each for the title and button area before setting the\n        // new max-height.\n        totalheight = newheight;\n        newheight = newheight - (15 + 15 + 40 + 40);\n        $(dialogue).css('maxHeight', newheight + 'px');\n\n        var dialogueheight = bb.getStyle('height');\n        if (dialogueheight.match(/.*px$/)) {\n            dialogueheight = dialogueheight.replace(/px$/, '');\n        } else {\n            dialogueheight = totalheight;\n        }\n\n        if (dialogueheight < ATTRS.baseheight) {\n            dialogueheight = ATTRS.baseheight;\n            $(dialogue).css('height', dialogueheight + 'px');\n        }\n\n        panel.centerDialogue();\n    };\n\n    var handleKeyPress = function(e) {\n        if (e.keyCode === 27) {\n            cancelPopup(e);\n        }\n\n        if (e.keyCode === 39) {\n            var focusedElement = $(\":focus\");\n        }\n    };\n\n    var updateHiddenRadioValue = function(name, value) {\n        hiddenRadioValue.attr({\n            value: value,\n            name: name\n        });\n    };\n\n    // var optionSelected = function(e) {\n    //     // Set a hidden input field with the value and name of the radio button.  When we submit the form, we\n    //     // disable the radios to prevent duplicate submission. This has the result however that the value is never\n    //     // submitted so we set this value to a hidden field instead.\n    //     updateHiddenRadioValue(e.name, e.value);\n    //     PubSub.publish(ActivityChooserEvents.OPTION_SELECTED, e);\n    // };\n\n    // var checkOptions = function() {\n    //     // Check which options are set, and change the parent class\n    //     // to show/hide help as required.\n    //     options.each(function(key, option) {\n    //         var optiondiv = $(option).parent().parent();\n    //         if ($(this).is(':checked')) {\n    //             $(optiondiv).addClass('selected');\n    //\n    //             // Trigger any events for this option.\n    //             optionSelected(option);\n    //\n    //             // Ensure that the form may be submitted.\n    //             submitbutton.removeAttr('disabled');\n    //\n    //             // Ensure that the radio remains focus so that keyboard navigation is still possible.\n    //             $(option).focus();\n    //         } else {\n    //             optiondiv.removeClass('selected');\n    //         }\n    //     }, this);\n    // };\n\n    var openModSummary = function(modSummaryElement) {\n        // Get the current scroll position of the .alloption element.\n        var topPosition = $(SELECTORS.MODULE_CHOOSER_CONTAINER).scrollTop();\n        // Get the height of the .alloption element.\n        var height = $(SELECTORS.MODULE_CHOOSER_CONTAINER).outerHeight();\n        // Disable the scroll of .alloptions.\n        $(SELECTORS.MODULE_CHOOSER_CONTAINER).addClass('noscroll');\n\n        setTypeSummaryPositionAndHeight(modSummaryElement, topPosition, height);\n\n        var typeSummaryContentElement = modSummaryElement.find('.content');\n        // Set the scroll of the type summary content element to top.\n        if (typeSummaryContentElement.scrollTop() > 0) {\n            typeSummaryContentElement.scrollTop(0);\n        }\n        // Show the particular summary overlay.\n        modSummaryElement.addClass('open');\n        var cancelAction = modSummaryElement.find(SELECTORS.MODULE_SUMMARY_ACTIONS.CLOSE_MODULE_SUMMARY);\n        var addAction = modSummaryElement.find(SELECTORS.MODULE_SUMMARY_ACTIONS.ADD_MODULE);\n\n        $(cancelAction).attr('tabindex', 0);\n        $(addAction).attr('tabindex', 0);\n    };\n\n    var setTypeSummaryPositionAndHeight = function(element, position, height) {\n        console.log(height);\n        var modSummaryContentElement = element.find('.content');\n        var modSumarryFooterElement = element.find('.actions');\n        var contentHeight = height - modSumarryFooterElement.outerHeight();\n        modSummaryContentElement.css({'height' : contentHeight + 'px'});\n\n        element.css({'top' : position + 'px', 'height' : height + 'px'});\n    };\n\n    var moveToOption = function(fromOption, toOption) {\n        $(toOption).attr('tabindex', 0);\n        $(toOption).focus();\n        $(fromOption).attr('tabindex', -1);\n    };\n\n    /**\n      * Display the module chooser.\n      *\n      * @method display_chooser\n      * @param {EventFacade} e Triggering Event\n      */\n    var displayChooser = function(e, sectionid) {\n        //var bb, dialogue, thisevent;\n        prepareChooser(sectionid);\n\n        // Stop the default event actions before we proceed.\n        // e.preventDefault();\n\n       // // bb = panel.get('boundingBox');\n       //  dialogue = container.find('.alloptions');\n       //\n       //  // Find all anchors used to add an activity and append the section param to the url.\n       //  var anchors = dialogue.find('.option .modicon a, .option .typesummary .action-footer .addbutton');\n       //  anchors.each(function(index, anchor) {\n       //      anchor.href += '&section=' + sectionid;\n       //  });\n       //\n       //  thisevent = $('.info.actionelement').on('click', function(e) {\n       //      var typeSummaryEl = $(e.target).closest('label').find('.typesummary');\n       //      openModSummary(typeSummaryEl);\n       //  });\n       //  listenevents.push(thisevent);\n       //\n       //  thisevent = $('.closetypesummary').on('click', function(e) {\n       //      setTimeout(function() {\n       //          var typeSummaryEl = $(e.target).closest('label').find('.typesummary');\n       //          typeSummaryEl.removeClass('open');\n       //\n       //          $('.alloptions').removeClass('noscroll');\n       //      }, 100);\n       //  });\n       //  listenevents.push(thisevent);\n       //\n       //  // This will detect a change in orientation and retrigger centering.\n       //  thisevent = $(document).on('orientationchange', function() {\n       //      centerDialogue(dialogue);\n       //  });\n       //  listenevents.push(thisevent);\n       //\n       //  // Detect window resizes (most browsers).\n       //  thisevent = $(window).on('resize', function() {\n       //      centerDialogue(dialogue);\n       //  });\n       //  listenevents.push(thisevent);\n       //\n       //  // thisevent = container.on('keyup', function() {\n       //  //     console.log(\"Herreee\");\n       //  //     //checkOptions();\n       //  // });\n       //  // listenevents.push(thisevent);\n       //\n       //  thisevent = $(\".option\").on('keydown', function(e) {\n       //      var index = $(this).index();\n       //      var optionOuterWidth = $('.option').outerWidth();\n       //      var wrapperWidth = $('.alloptions').width();\n       //      var rowOptions = Math.floor(wrapperWidth / optionOuterWidth);\n       //      var totalOptions = options.length;\n       //      var totalRowsCount = Math.floor(options.length / rowOptions);\n       //      var indexRow = Math.ceil((index + 1) / rowOptions);\n       //\n       //      // Right key.\n       //      if (e.keyCode === 39) {\n       //          var nextIndex = index + 1;\n       //          if (typeof options[nextIndex] === 'undefined') {\n       //              return;\n       //          }\n       //          moveToOption(options[index], options[nextIndex]);\n       //      }\n       //\n       //      // Left key.\n       //      if (e.keyCode === 37) {\n       //          var prevIndex = index - 1;\n       //          if (typeof options[prevIndex] === 'undefined') {\n       //              return;\n       //          }\n       //          moveToOption(options[index], options[prevIndex]);\n       //      }\n       //\n       //      // down key.\n       //      if (e.keyCode === 40) {\n       //          // If the focus is on an element from the last visual row.\n       //          if (indexRow == totalRowsCount) {\n       //              return;\n       //          }\n       //          var nextIndex = index + rowOptions;\n       //          if (typeof options[nextIndex] === 'undefined') {\n       //              nextIndex = totalOptions - 1;\n       //          }\n       //          moveToOption(options[index], options[nextIndex]);\n       //      }\n       //\n       //      // up key.\n       //      if (e.keyCode === 38) {\n       //          // if the focus is on an element from the first visual row.\n       //          if (indexRow === 1) {\n       //              return;\n       //          }\n       //          var prevIndex = index - rowOptions;\n       //          if (typeof options[prevIndex] === 'undefined') {\n       //              prevIndex = 0;\n       //          }\n       //          moveToOption(options[index], options[prevIndex]);\n       //      }\n       //\n       //      // end key.\n       //      if (e.keyCode === 35) {\n       //          var lastOptionIndex = totalOptions - 1;\n       //          if (index === lastOptionIndex) {\n       //              return;\n       //          }\n       //          moveToOption(options[index], options[lastOptionIndex]);\n       //      }\n       //\n       //      // home key.\n       //      if (e.keyCode === 36) {\n       //          var firstOptionIndex = 0;\n       //          if (index === firstOptionIndex) {\n       //              return;\n       //          }\n       //          moveToOption(options[index], options[firstOptionIndex]);\n       //      }\n       //\n       //      if (e.keyCode === 13 || e.keyCode == 32) {\n       //          var actionElements = $(this).find('.actionelement');\n       //          // optionactions.each(function(index, optionaction) {\n       //          //     $($(optionaction).children()[0]).attr({'tabindex' : 0, 'aria-hidden' : 'false'});\n       //          // });\n       //          // var modinfo = $(this).find('.info i');\n       //          // //$(this).attr('tabindex', -1);\n       //          // $(modanchor).attr('tabindex', 0);\n       //          // $(modinfo).attr('tabindex', 0);\n       //          // $(modinfo).attr('aria-hidden', 'false');\n       //          // $(modanchor).focus();\n       //           $(actionElements[0]).attr('tabindex', 0);\n       //           $(actionElements[0]).focus();\n       //           $(this).attr('tabindex', -1);\n       //      }\n       //  });\n       //  listenevents.push(thisevent);\n       //\n       //  thisevent = $(\".actionelement\").on('keydown', function(e) {\n       //       e.preventDefault();\n       //       e.stopPropagation();\n       //\n       //      var actionElements = $(this).closest(\"label\").find(\".actionelement\");\n       //      var index = $(actionElements).index(this);\n       //\n       //      // down key.\n       //      if (e.keyCode === 40 || e.keyCode === 39) {\n       //          var next = index + 1;\n       //          if (typeof actionElements[next] === 'undefined') {\n       //              return;\n       //          }\n       //          var nextAction = actionElements[next];\n       //          $(nextAction).attr('tabindex', 0);\n       //          $(nextAction).focus();\n       //          $(this).attr('tabindex', -1);\n       //      }\n       //\n       //      // up key.\n       //      if (e.keyCode === 38 || e.keyCode === 37) {\n       //          var prev = index - 1;\n       //          if (typeof actionElements[prev] === 'undefined') {\n       //              return;\n       //          }\n       //          var prevAction = actionElements[prev];\n       //          $(prevAction).attr('tabindex', 0);\n       //          $(prevAction).focus();\n       //          $(this).attr('tabindex', -1);\n       //      }\n       //\n       //      if (e.keyCode === 27) {\n       //          var optionElement = $(this).closest('.option');\n       //          $(optionElement).attr('tabindex', 0);\n       //          $(optionElement).focus();\n       //          $(this).attr('tabindex', -1);\n       //      }\n       //\n       //      if (e.keyCode === 13) {\n       //          if ($(this).hasClass('info')) {\n       //              var typeSummaryEl = $(this).closest('label').find('.typesummary');\n       //              openModSummary(typeSummaryEl);\n       //          }\n       //          return;\n       //      }\n       //  });\n       //  listenevents.push(thisevent);\n       //\n       //  // Hide will be managed by cancel_popup after restoring the body overflow.\n       //  // thisevent = bb.one('button.closebutton').on('click', function(e) {\n       //  //     cancelPopup(e);\n       //  // });\n       //  // listenevents.push(thisevent);\n       //\n       //  // Grab global keyup events and handle them\n       //  // thisevent = $(document).on('keydown', handleKeyPress(e));\n       //  // listenevents.push(thisevent);\n       //\n       //  // Display the panel\n       //  panel.show(e);\n       //\n       //  // Re-centre the dialogue after we've shown it.\n       //  centerDialogue(dialogue);\n       //\n       //  // Finally, focus the first radio element - this enables form selection via the keyboard.\n       //  container.find('.option input[type=radio]').focus();\n    };\n\n    return /** @alias module:core/activity_chooser_dialogue */{\n\n        /**\n         * Poll the server for any new notifications.\n         *\n         * @method fetchNotifications\n         */\n        setupChooserDialogue: setupChooserDialogue,\n\n        /**\n         * Add a notification to the page.\n         *\n         * Note: This does not cause the notification to be added to the session.\n         *\n         * @method addNotification\n         * @param {Object}  notification                The notification to add.\n         * @param {string}  notification.message        The body of the notification\n         * @param {string}  notification.type           The type of notification to add (error, warning, info, success).\n         * @param {Boolean} notification.closebutton    Whether to show the close button.\n         * @param {Boolean} notification.announce       Whether to announce to screen readers.\n         */\n        displayChooser: displayChooser,\n        updateHiddenRadioValue: updateHiddenRadioValue\n    };\n});\n"],"file":"activity_chooser_dialogue.min.js"}